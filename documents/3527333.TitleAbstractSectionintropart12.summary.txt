

This section discusses various data representations supported by SDQL, and their correspondence to existing data formats used in query engines and linear algebra frameworks. It covers flat vs. curried representation, factorized relations, curried matrices, row vs. columnar, and sparse vs. dense layouts. For example, a relation 𝑅(𝑎1,..., 𝑎𝑛) can be represented as a dictionary of type { <a: T1, b: T2> -> T3 } in SDQL, and its factorized representation is a nested dictionary of type {𝐴1->{...->{𝐴𝑛->int}...}}. Curried matrices are an SDQL expression of type { int -> { int -> S } }. Row vs. columnar representation can be stored as dictionaries where the key is an index, and the value is the corresponding row. Sparse layout is encoded as dictionaries with hash table as their underlying implementations, while dense layout uses array for implementing collections.