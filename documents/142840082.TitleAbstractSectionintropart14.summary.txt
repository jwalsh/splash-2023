

This section provides formalized inference rules for the symbolic transformation of expressions in modular arithmetic. The rules are divided into four categories: DivPosConst, DivNegConst, BoundCheckMod, BoundCheckNoMod, ModPlusExpr, ModMultExpr, and ModIdentity. The first two rules, DivPosConst and DivNegConst, are applied when neither of the rules can be applied. The BoundCheckMod and BoundCheckNoMod rules are used to check the bounds of the bound check expression and collect any potential errors. The ModPlusExpr and ModMultExpr rules are used to propagate the outermost modulo computation of the main expression when the modulo specifications of the two abstract translations of the operands are compatible with the outermost modulo computation. The ModIdentity rule is used to simplify the modulo computations when the outermost modulo interval is large enough and compatible with the modular ring of the translated sub-expression. Lastly, the primitivermMod is used to eliminate the outermost modulo of the main expression when no other rules can be applied.