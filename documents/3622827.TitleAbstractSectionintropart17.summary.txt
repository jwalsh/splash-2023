

This section discusses the current state of modular program verification for linearizability, ownership transfer, and highly concurrent libraries. It also discusses the verifications of other memory management methods, such as atomic reference counter (ARC), free list, and garbage collection. Alglave et al. (2018) proposed a specification of RCU and proved the specification for an implementation of RCU in the Linux kernel's relaxed memory model. Kuru and Gordon (2019) proposed a specification of RCU that guarantees memory safety and the absence of memory leaks. The section also outlines future work, such as application to other SMR schemes, proof automation, and adapting the verification to the iRC11. Finally, the section acknowledges the support of Samsung Research Funding & Incubation Center of Samsung Electronics and provides a link to the Coq development and appendix for the paper.