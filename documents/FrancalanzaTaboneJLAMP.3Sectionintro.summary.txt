

This section introduces the Actor Model and Session Types used in the ElixirST type system. The Actor Model describes computation as a group of concurrent processes, called actors, which do not share any memory and interact exclusively via asynchronous messages. Session Types are used to statically check the message-passing interactions and extend the standard expression types, such as boolean, number, atom and pid, and inductively defined types, such as tuples and lists. The branching construct is labelled by any one of the labels li, with the respective list of values of type (cid:101)Ti, and the choice construct describes the range and format of outputs the code is allowed to perform at that point of execution. Recursive types are treated equi-recursively and the dual of a session type S is denoted as S.