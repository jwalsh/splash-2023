

This section discusses the use of managed and protected pointers to prevent double-free errors in the Treiber's stack with hazard pointers. Managed pointers replace points-to assertions and permit read access via Managed-Access. A managed pointer assertion is introduced from a full points-to via Managed-New. A view shift assertion is used to prove a Hoare triple, which states that a pointer can be transformed into another pointer while proving a Hoare triple. The proof of the stack push() method converts the points-to of the newly pushed node into a managed pointer assertion with Managed-New and prepends it to LinkedList. The managed pointer assertion represents the unique permission to retire a pointer. To show the safety of retiring a pointer, one should provide its Managed to HP-Retire as a precondition. When a thread successfully protects a pointer, it obtains the pointer predicate of the form Protected(thread, pointer, data), which represents the temporary permission for the thread to access the pointer.