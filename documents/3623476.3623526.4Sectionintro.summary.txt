

This section introduces the Live State Machine Language (LiveSML) as an illustrative example of a DSL for simultaneously creating and running state machines. It then outlines the key requirements that programming environments must fulfill to cater to the programmer's needs. It then introduces the Cascade framework, a language-parametric solution for developing change-based live programming environments. The Cascade framework provides a meta-language and a set of generic reusable components that integrate domain-specific additions for addressing technical challenges. It explains how to express the syntax and run-time states using meta-models, design actions, events and effects as bi-directional model-transformations, design side-effects as relationships between predictable outcomes, and design cascading changes that are central to live programming. Finally, it outlines three case studies to explore how Cascade helps to express the language designs and program execution of DSLs in a principled manner.