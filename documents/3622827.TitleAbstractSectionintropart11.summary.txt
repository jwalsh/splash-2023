

This section discusses the synchronization between protection and reclamation of a single memory block. It presents a program that consists of three locations , , and  that record the status of the block. The left thread (1) protects and accesses the block, while the right thread (2) detaches and reclaims the block. The section then informally reasons about the safety of the program by case analysis and formalizes the reasoning by introducing ghost locations v and r that record whether protection of the block is validated and whether the block is reclaimed. It also introduces four variables  and  for the value stored in physical locations  and ; and  and  for the values recorded in v and r. Finally, the section presents the predicates and invariant of hazard pointers to support multiple pointers and threads.