

This section discusses the various ways in which Astrée, a static runtime error analyzer, has been extended to support code guideline checking, cybersecurity vulnerability scanning, data and control flow analysis, C++, precision and efficiency, and user perspective. XML converter has been developed for Astrée which automatically generates the appropriate data structures and access functions for the Astrée analysis, and enables a fully automatic integration analysis of AUTOSAR projects. Code Guideline Checking is used to improve code quality and is strongly recommended by all current safety standards. Astrée has been extended to support all major coding guidelines, such as MISRA C/C++, SEI CERT C/C++, CWE, etc. Astrée has also been extended by a generic abstract domain for taint analysis to support security attacks. Data and Control Flow analysis is used to determine the data and control flow in the source code and make sure that it is compliant to the intended control and data flow as defined in the software architecture. Astrée has also been extended to support C++ and mixed C/C++. Constant development effort is required to work at precision and scalability of the analyzer. Finally, the ISO 26262 norm puts en emphasis on the need to embrace functional safety in the company organization and establish a safety culture. Verification activities should not be perceived as a burden that drains on development cost, delays delivery and does not provide an added value to the end product.