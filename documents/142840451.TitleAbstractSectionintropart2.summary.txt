

Schoepe et al. present an approach to lifting on-demand static analyses to higher-order languages, which allows for precise interprocedural reasoning and on-demand techniques. The approach starts from an empty call graph and proceeds by interleaving backward and forward data flow queries, which allows for a sound overapproximation of a relevant part of the call graph. The authors propose a language-agnostic construction for bootstrapping an on-demand call graph, formalize the approach as an abstract domain combinator, and evaluate a prototype implementation for a subset of JavaScript. They illustrate the main ideas on a small JavaScript example program, which shows how callbacks complicate the control-flow of programs and can lead to unintended behavior. The authors demonstrate how their technique can detect such leaks by constructing a call graph (illustrated in Fig. 2) and issuing a backward data flow query.