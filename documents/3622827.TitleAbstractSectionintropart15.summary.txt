

This section discusses the wide applicability of the authors' specifications of hazard pointers and RCU to verify concurrent data structures with manual memory reclamation. The authors compare the lines of code and proof for implementation and proof for logical atomicity of concurrent data structures with and without reclamation. The results show that the total code overhead of applying hazard pointers and RCU is 35.4% and 24.5%, respectively, and the total proof overhead of applying hazard pointers and RCU is 25.3%.4%, respectively. The authors also note that the additional proofs for hazard pointers and RCU are similar, and that the Harris-Michael list with hazard pointers exhibits significantly smaller proof overhead because of the simplification of the reasoning related to prophecy variables. The section then discusses related work, noting that various program logic-based approaches have been proposed to verify concurrent data structures with manual memory management, but none of them support all three criteria of modular verification discussed in the section.