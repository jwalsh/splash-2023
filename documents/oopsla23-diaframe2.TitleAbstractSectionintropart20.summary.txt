

This section discusses various approaches to automated proof automation for linearizability in separation logic. It mentions the Viper tool, which is used for logical atomicity in the TaDA logic, and the security condition non-interference. It also mentions automated linearizability checkers such as CAVE, Poling, and Line-up, which use the trace-based formulation of linearizability. Verified concurrent search data structures are discussed, as well as automated verifiers for concurrent refinements such as Civl. Other logics for linearizability are mentioned, such as FCSL, Liang and Feng's program logic, and Kim et al.'s C implementation of an MCS lock. The section also mentions potential future work, such as improving the usability of Diaframe 2.0, instantiating the generic Diaframe 2.0 strategy with other logics and languages, and investigating automation for recent work by Dang et al. on logical atomicity under weak memory.