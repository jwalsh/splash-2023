

This section provides an overview of the development and commercialization of two industry-strength Abstract Interpretation-based static analyzers, aiT WCET Analy Astr√©e. It discusses the lessons learned and presents recommendations to improve dissemination and acceptance in industrial practice. It explains that Abstract Interpretation is a formal method for sound semantics-based static program analysis and is used to determine non-functional software quality properties. It also explains that many formal verification tools, including abstract interpretation-based static analyzers, originate from academic research projects. The section then focuses on the development of a WCET-analysis method, which consists of attempting to verify safety properties that certain timing accidents will not happen. It explains that the Microarchitectural Analysis, embedded within a complex tool architecture, is the central innovation that made the WCET analysis work and scale. It also discusses the development of a cache analysis and a pipeline analysis.