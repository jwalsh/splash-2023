

This section discusses the Hoare triple and logically atomic triple, which are used to specify the behavior of instructions in a concurrent setting. The Hoare triple expresses that for each thread that owns resources satisfying the precondition , executing  is safe, and if the execution terminates with value , the thread will end up owning resources satisfying the postcondition Φ . The logically atomic triple states that at the linearization point in the execution of , the resources in  are consumed to produce the resources in Φ , where  is the final return value of expression . Logically atomic triples are stronger than ordinary Hoare triples and can be used inside the logic with the reasoning rules la-inv and la-hoare. The pre-conditions of logically atomic triples can be (a number of) quantifiers ®. Hoare triples and logically atomic triples are defined in terms of weakest preconditions.