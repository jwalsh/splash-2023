

This section discusses the use of fractional and leaking points-to predicates to describe the valid states of Treiber's stack. It explains that IsStack is a generalization of the stack resource and LinkedList(ℎ, ) consists of the points-to assertions of every memory block in the linked list of elements  starting from the head node ℎ. It then explains fractional points-to, which allows splitting ownership into fractional parts that allow read accesses only and can be combined back to the full ownership ℓ ↦−→  to recover the right to write and reclaim. It also explains leaking points-to, which is a variant of points-to assertion ℓ ↦→?  that represents a read-only permission to an immutable location ℓ that never gets reclaimed. Finally, it discusses the use of logically atomic triples to specify SMR schemes.