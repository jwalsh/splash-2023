

In this section, the authors present two modular specifications of RCU (Read-Copy-Update) to formally verify Harris' list with RCU for the first time. The first specification captures the protection of critical sections, while the second is tailored towards optimistic traversal. The authors introduce types and predicates such as Guard, RCUState, BlockStatus, BlockInfo, and RCUSlot to encode the protection of critical sections. Guard(ThreadId, {BlockId | BlockId[Loc] = Retired}) is used to represent the fact that a thread is in a critical section and records the set of pointers that had been already retired when the critical section began. RCUState(BlockId - Loc x BlockStatus) is used to describe the current status of all memory blocks managed by RCU. BlockInfo(BlockId, Loc, BlockRes) is the knowledge extracted from Managed(Loc, BlockId, BlockRes) that BlockId is associated with the physical address Loc and governed by the block resource BlockRes. Rules such as RCU-Lock, RCU-Unlock, Managed-Protected, RCU-Retire, Managed-BlockInfo, Guard-Managed-Agree, Guard-Access, and RCU-Retire are also introduced to govern the ownership transfer of ghost mapping and cancellable invariants.