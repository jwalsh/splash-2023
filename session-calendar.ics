BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//researchr.org//conf.researchr.org//EN
CALSCALE:GREGORIAN

BEGIN:VEVENT
DTSTART:20231022T080000Z
DTEND:20231022T093000Z
DTSTAMP:20231021T100613Z
UID:7e99c631-300a-49dc-a29e-436fc9f4e4ab@conf.researchr.org
CREATED:20230916T194729Z
SUMMARY:PPDP: Session 1
DESCRIPTION:PPDP: Session 1\nSession Chair(s): Michael Hanus\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T080000Z
DTEND:20231022T093000Z
DTSTAMP:20231021T100613Z
UID:40cd7cbd-a77d-4708-b809-60d5bfbf3ca2@conf.researchr.org
CREATED:20230913T205740Z
SUMMARY:SAS : Session 1
DESCRIPTION:SAS : Session 1\nSession Chair(s): Caterina Urban\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T080000Z
DTEND:20231022T093000Z
DTSTAMP:20231021T100613Z
UID:cc11d9aa-f35a-4a07-b408-b161f0f04117@conf.researchr.org
CREATED:20230911T224845Z
SUMMARY:MPLR: MPLR Session 1
DESCRIPTION:MPLR: MPLR Session 1\nSession Chair(s): Eliot Moss\n\nThe 20th International Conference on Managed Programming Languages &amp\; Runtimes (MPLR’23\, formerly ManLang\, originally PPPJ) is a premier forum for presenting and discussing novel results in all aspects of managed programming languages and runtime systems\, which serve as building blocks for some of the most important computing systems around\, ranging from small-scale (embedded and real-time systems) to large-scale (cloud-computing and big-data platforms) and anything in between (mobile\, IoT\, and wearable applications). \nPapers accepted by MPLR’23 describe original research results and have not been published anywhere else. Each submitted paper has received a minimum of three reviews by members of the program committee. Papers have been selected based on their originality\, relevance\, technical clarity\, and quality of presentation. At least one author of each accepted paper must register for the MPLR’23 symposium and present the paper.
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T080000Z
DTEND:20231022T093000Z
DTSTAMP:20231021T100613Z
UID:0f2d84c3-2f32-44a8-a178-3555252358de@conf.researchr.org
CREATED:20230914T172519Z
SUMMARY:FTSCS: Opening\, Keynote
DESCRIPTION:FTSCS: Opening\, Keynote\nSession Chair(s): Peter Ölveczky\n\n9th ACM International Workshop on Formal Techniques for Safety-Critical Systems \nCascais\, Portugal\, October 22\, 2023 \nhttps://2023.splashcon.org/home/ftscs-2023 \n \nSubmission deadline extended to July 21 \nACM Digital Library proceedings \nScience of Computer Programming special issue (to be confirmed) \nAims and Scope: \nThere is an increasing demand for using formal methods to validate and verify safety-critical systems in fields such as power generation and distribution\, avionics\, automotive systems\, medical systems\, and autonomous vehicles. In particular\, newer standards\, such as DO-178C (avionics)\, ISO 26262 (automotive systems)\, IEC 62304 (medical devices)\, and CENELEC EN 50128 (railway systems)\, emphasize the need for formal methods and model-based development\, thereby speeding up the adaptation of such methods in industry. \nThe aim of this workshop is to bring together researchers and engineers who are interested in the application of formal and semi-formal methods to improve the quality of safety-critical computer systems. FTSCS strives to promote research and development of formal methods and tools for industrial applications\, and is particularly interested in industrial applications of formal methods. \nSpecific topics include\, but are not limited to: \n \n case studies and experience reports on the use of formal methods for analyzing safety-critical systems\, including avionics\, automotive\, medical\, railway\, and other kinds of safety-critical and QoS-critical systems \n methods\, techniques and tools to support automated analysis\, certification\, debugging\, etc.\, of safety/QoS-critical systems \n analysis methods that address the limitations of formal methods in industry (usability\, scalability\, etc.) \n formal analysis support for modeling languages used in industry\, such as AADL\, Ptolemy\, SysML\, SCADE\, Modelica\, etc. \n code generation from validated models. \n \nThe workshop will provide a platform for discussions and the exchange of innovative ideas\, so submissions on work in progress are encouraged. \nSubmission: \nWe solicit submissions reporting on: \n \n A: original research contributions (10 pages max\, ACM format)\; \n B: applications and experiences (10 pages max\, ACM format)\; \n C: surveys\, comparisons\, and state-of-the-art reports (10 pages max\, ACM)\; \n D: tool papers (5 pages max\, ACM format)\; \n E: position papers and work in progress (5 pages max\, ACM format) \n \nrelated to the topics mentioned above. (The page limits do not include the references.) Note: KTH currently does not allow collaboration with Russia or Belarus. We therefore cannot accept papers with affiliation in Russia or Belarus. \nAll submissions must be original\, unpublished\, and not submitted concurrently for publication elsewhere. Paper submission is done via HotCRP at https://ftscs23.hotcrp.com/. Submissions should be prepared in LaTeX\, adhering to the ACM format available at https://www.acm.org/publications/proceedings-template using the “sigplan” option. \nPublication: \nAll accepted papers will appear in the pre-proceedings of FTSCS 2023. Accepted papers in the categories A-D above will appear in the workshop proceedings that will be published as a volume in the ACM Digital Library. \nAs usual\, we also plan to invite authors of some accepted papers to submit extended versions of their papers to a special issue of the Science of Computer Programming journal (to be confirmed). \nImportant dates: \n \n Submission deadline: July 12\, 2023 July 21\, 2023 (AoE) \n Notification of acceptance: August 26\, 2023 \n Camera ready paper due: September 10\, 2023 \n Workshop: October 22\, 2023 \n
LOCATION:Room IV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T080000Z
DTEND:20231022T093000Z
DTSTAMP:20231021T100613Z
UID:75a5d29f-00ec-408a-bbf6-0b1648da84e7@conf.researchr.org
CREATED:20230913T164825Z
SUMMARY:ST30 : ST30 Day 1 Session 1
DESCRIPTION:ST30 : ST30 Day 1 Session 1\nSession Chair(s): Kirstin Peters\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T100000Z
DTEND:20231022T113000Z
DTSTAMP:20231021T100613Z
UID:83c5de47-246b-4e77-bf28-f4a232c3925e@conf.researchr.org
CREATED:20230916T194751Z
SUMMARY:PPDP: Session 2
DESCRIPTION:PPDP: Session 2\nSession Chair(s): Santiago Escobar\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T100000Z
DTEND:20231022T113000Z
DTSTAMP:20231021T100613Z
UID:5346bcb1-98c0-46a7-aa50-b15396295080@conf.researchr.org
CREATED:20230913T205730Z
SUMMARY:SAS : Domain precision
DESCRIPTION:SAS : Domain precision\nSession Chair(s): Bor-Yuh Evan Chang\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T100000Z
DTEND:20231022T113000Z
DTSTAMP:20231021T100613Z
UID:33ed4f90-56f2-493c-86ca-51d6b94f103d@conf.researchr.org
CREATED:20230911T230707Z
SUMMARY:MPLR: MPLR Session 2
DESCRIPTION:MPLR: MPLR Session 2\nSession Chair(s): Matthew J. Parkinson\n\nThe 20th International Conference on Managed Programming Languages &amp\; Runtimes (MPLR’23\, formerly ManLang\, originally PPPJ) is a premier forum for presenting and discussing novel results in all aspects of managed programming languages and runtime systems\, which serve as building blocks for some of the most important computing systems around\, ranging from small-scale (embedded and real-time systems) to large-scale (cloud-computing and big-data platforms) and anything in between (mobile\, IoT\, and wearable applications). \nPapers accepted by MPLR’23 describe original research results and have not been published anywhere else. Each submitted paper has received a minimum of three reviews by members of the program committee. Papers have been selected based on their originality\, relevance\, technical clarity\, and quality of presentation. At least one author of each accepted paper must register for the MPLR’23 symposium and present the paper.
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T100000Z
DTEND:20231022T113000Z
DTSTAMP:20231021T100613Z
UID:c65c80e1-31f6-4c7a-9a96-af8dfd40052d@conf.researchr.org
CREATED:20230914T172926Z
SUMMARY:FTSCS: Paper presentations
DESCRIPTION:FTSCS: Paper presentations\nSession Chair(s): Cyrille Artho\n\n9th ACM International Workshop on Formal Techniques for Safety-Critical Systems \nCascais\, Portugal\, October 22\, 2023 \nhttps://2023.splashcon.org/home/ftscs-2023 \n \nSubmission deadline extended to July 21 \nACM Digital Library proceedings \nScience of Computer Programming special issue (to be confirmed) \nAims and Scope: \nThere is an increasing demand for using formal methods to validate and verify safety-critical systems in fields such as power generation and distribution\, avionics\, automotive systems\, medical systems\, and autonomous vehicles. In particular\, newer standards\, such as DO-178C (avionics)\, ISO 26262 (automotive systems)\, IEC 62304 (medical devices)\, and CENELEC EN 50128 (railway systems)\, emphasize the need for formal methods and model-based development\, thereby speeding up the adaptation of such methods in industry. \nThe aim of this workshop is to bring together researchers and engineers who are interested in the application of formal and semi-formal methods to improve the quality of safety-critical computer systems. FTSCS strives to promote research and development of formal methods and tools for industrial applications\, and is particularly interested in industrial applications of formal methods. \nSpecific topics include\, but are not limited to: \n \n case studies and experience reports on the use of formal methods for analyzing safety-critical systems\, including avionics\, automotive\, medical\, railway\, and other kinds of safety-critical and QoS-critical systems \n methods\, techniques and tools to support automated analysis\, certification\, debugging\, etc.\, of safety/QoS-critical systems \n analysis methods that address the limitations of formal methods in industry (usability\, scalability\, etc.) \n formal analysis support for modeling languages used in industry\, such as AADL\, Ptolemy\, SysML\, SCADE\, Modelica\, etc. \n code generation from validated models. \n \nThe workshop will provide a platform for discussions and the exchange of innovative ideas\, so submissions on work in progress are encouraged. \nSubmission: \nWe solicit submissions reporting on: \n \n A: original research contributions (10 pages max\, ACM format)\; \n B: applications and experiences (10 pages max\, ACM format)\; \n C: surveys\, comparisons\, and state-of-the-art reports (10 pages max\, ACM)\; \n D: tool papers (5 pages max\, ACM format)\; \n E: position papers and work in progress (5 pages max\, ACM format) \n \nrelated to the topics mentioned above. (The page limits do not include the references.) Note: KTH currently does not allow collaboration with Russia or Belarus. We therefore cannot accept papers with affiliation in Russia or Belarus. \nAll submissions must be original\, unpublished\, and not submitted concurrently for publication elsewhere. Paper submission is done via HotCRP at https://ftscs23.hotcrp.com/. Submissions should be prepared in LaTeX\, adhering to the ACM format available at https://www.acm.org/publications/proceedings-template using the “sigplan” option. \nPublication: \nAll accepted papers will appear in the pre-proceedings of FTSCS 2023. Accepted papers in the categories A-D above will appear in the workshop proceedings that will be published as a volume in the ACM Digital Library. \nAs usual\, we also plan to invite authors of some accepted papers to submit extended versions of their papers to a special issue of the Science of Computer Programming journal (to be confirmed). \nImportant dates: \n \n Submission deadline: July 12\, 2023 July 21\, 2023 (AoE) \n Notification of acceptance: August 26\, 2023 \n Camera ready paper due: September 10\, 2023 \n Workshop: October 22\, 2023 \n
LOCATION:Room IV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T100000Z
DTEND:20231022T113000Z
DTSTAMP:20231021T100613Z
UID:77cd265e-f090-44de-b53e-84341c1d8bc9@conf.researchr.org
CREATED:20230913T185054Z
SUMMARY:HATRA: Formalisms and Synthesis
DESCRIPTION:\n\nProgramming language designers seek to provide strong tools to help developers reason about their programs. For example\, the formal methods community seeks to enable developers to prove correctness properties of their code\, and type system designers seek to exclude classes of undesirable behavior from programs. The security community creates tools to help developers achieve their security goals. In order to make these approaches as effective as possible for developers\, recent work has integrated approaches from human-computer interaction research into programming language design. This workshop brings together programming languages\, software engineering\, security\, and human-computer interaction researchers to investigate methods for making languages that provide stronger safety properties more effective for programmers and software engineers. \nWe have two goals: (1) to provide a venue for discussion and feedback on early-stage approaches that might enable people to be more effective at achieving stronger safety properties in their programs\; (2) to facilitate discussion about relevant topics of participant interest. \nHATRA is interested in two different kinds of contributions. First\, extended abstracts that summarize an existing body of work that is relevant to the workshop’s topic\; the presentations serve to familiarize the community\, which may be diverse\, with work that already exists. Second\, research papers that describe a new idea\, approach\, or hypothesis in the space and are presented as an opportunity for the authors to receive community feedback and for the community to seek inspiration from others. \nThe day will be divided into two segments. In the first segment\, authors of accepted papers will present their work. In the second segment\, we will conduct an “unconference”-style meeting. By allowing the participants to drive the agenda\, we hope to focus on topics that provide stimulating and enlightening discussion. \nHATRA 2023 will be a hybrid workshop. Participants will be able to join and present in person or remotely.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T100000Z
DTEND:20231022T113000Z
DTSTAMP:20231021T100613Z
UID:bb770d4f-c14f-4b08-ae47-aa0697017401@conf.researchr.org
CREATED:20230913T164918Z
SUMMARY:ST30 : ST30 Day 1 Session 2 - Invited talk
DESCRIPTION:ST30 : ST30 Day 1 Session 2 - Invited talk\nSession Chair(s): Vasco T. Vasconcelos\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T100000Z
DTEND:20231022T113000Z
DTSTAMP:20231021T100613Z
UID:d183b600-bc78-478a-b794-2c49678a4745@conf.researchr.org
CREATED:20231012T174134Z
SUMMARY:GPCE: Session 1
DESCRIPTION:\n\nACM SIGPLAN International Conference on Generative Programming: Concepts &amp\; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation\, domain-specific languages\, and component deployment to increase programmer productivity\, improve software quality\, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software\, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities. \nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis\, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations\, and corresponding Implementation Technologies aiming at modularity\, correctness\, reuse\, and evolution. As the field matures Applications and Empirical Results are of increasing importance. \nGPCE 2023 will be co-located with SPLASH\, SAS\, and SLE. The conference will be hosted in Lisbon\, Portugal. \nConference website: https://conf.researchr.org/home/gpce-2023 \nSubmission site: https://gpce23.hotcrp.com/ \nGPCE conference series: https://conf.researchr.org/series/gpce \ntwitter: https://twitter.com/gpceconf (@GPCECONF)
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T130000Z
DTEND:20231022T143000Z
DTSTAMP:20231021T100613Z
UID:b4115d96-72a1-4528-bf58-d942c103da87@conf.researchr.org
CREATED:20230916T194800Z
SUMMARY:PPDP: Session 3
DESCRIPTION:PPDP: Session 3\nSession Chair(s): Santiago Escobar\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T130000Z
DTEND:20231022T143000Z
DTSTAMP:20231021T100613Z
UID:c75aa00e-2b38-44fc-a66b-f9904f504a92@conf.researchr.org
CREATED:20230913T204601Z
SUMMARY:SAS : Synthesis and applications
DESCRIPTION:SAS : Synthesis and applications\nSession Chair(s): Daniel Schoepe\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T130000Z
DTEND:20231022T143000Z
DTSTAMP:20231021T100613Z
UID:84d676ab-f63b-4f81-bfd2-35fb06441688@conf.researchr.org
CREATED:20230911T230927Z
SUMMARY:MPLR: MPLR Session 3
DESCRIPTION:MPLR: MPLR Session 3\nSession Chair(s): Rodrigo Bruno\n\nThe 20th International Conference on Managed Programming Languages &amp\; Runtimes (MPLR’23\, formerly ManLang\, originally PPPJ) is a premier forum for presenting and discussing novel results in all aspects of managed programming languages and runtime systems\, which serve as building blocks for some of the most important computing systems around\, ranging from small-scale (embedded and real-time systems) to large-scale (cloud-computing and big-data platforms) and anything in between (mobile\, IoT\, and wearable applications). \nPapers accepted by MPLR’23 describe original research results and have not been published anywhere else. Each submitted paper has received a minimum of three reviews by members of the program committee. Papers have been selected based on their originality\, relevance\, technical clarity\, and quality of presentation. At least one author of each accepted paper must register for the MPLR’23 symposium and present the paper.
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T130000Z
DTEND:20231022T143000Z
DTSTAMP:20231021T100613Z
UID:9185f4c9-6c74-41e4-89f5-783ca8b790a1@conf.researchr.org
CREATED:20230914T172941Z
SUMMARY:FTSCS: Paper presentations 2
DESCRIPTION:FTSCS: Paper presentations 2\nSession Chair(s): Kyungmin Bae\n\n9th ACM International Workshop on Formal Techniques for Safety-Critical Systems \nCascais\, Portugal\, October 22\, 2023 \nhttps://2023.splashcon.org/home/ftscs-2023 \n \nSubmission deadline extended to July 21 \nACM Digital Library proceedings \nScience of Computer Programming special issue (to be confirmed) \nAims and Scope: \nThere is an increasing demand for using formal methods to validate and verify safety-critical systems in fields such as power generation and distribution\, avionics\, automotive systems\, medical systems\, and autonomous vehicles. In particular\, newer standards\, such as DO-178C (avionics)\, ISO 26262 (automotive systems)\, IEC 62304 (medical devices)\, and CENELEC EN 50128 (railway systems)\, emphasize the need for formal methods and model-based development\, thereby speeding up the adaptation of such methods in industry. \nThe aim of this workshop is to bring together researchers and engineers who are interested in the application of formal and semi-formal methods to improve the quality of safety-critical computer systems. FTSCS strives to promote research and development of formal methods and tools for industrial applications\, and is particularly interested in industrial applications of formal methods. \nSpecific topics include\, but are not limited to: \n \n case studies and experience reports on the use of formal methods for analyzing safety-critical systems\, including avionics\, automotive\, medical\, railway\, and other kinds of safety-critical and QoS-critical systems \n methods\, techniques and tools to support automated analysis\, certification\, debugging\, etc.\, of safety/QoS-critical systems \n analysis methods that address the limitations of formal methods in industry (usability\, scalability\, etc.) \n formal analysis support for modeling languages used in industry\, such as AADL\, Ptolemy\, SysML\, SCADE\, Modelica\, etc. \n code generation from validated models. \n \nThe workshop will provide a platform for discussions and the exchange of innovative ideas\, so submissions on work in progress are encouraged. \nSubmission: \nWe solicit submissions reporting on: \n \n A: original research contributions (10 pages max\, ACM format)\; \n B: applications and experiences (10 pages max\, ACM format)\; \n C: surveys\, comparisons\, and state-of-the-art reports (10 pages max\, ACM)\; \n D: tool papers (5 pages max\, ACM format)\; \n E: position papers and work in progress (5 pages max\, ACM format) \n \nrelated to the topics mentioned above. (The page limits do not include the references.) Note: KTH currently does not allow collaboration with Russia or Belarus. We therefore cannot accept papers with affiliation in Russia or Belarus. \nAll submissions must be original\, unpublished\, and not submitted concurrently for publication elsewhere. Paper submission is done via HotCRP at https://ftscs23.hotcrp.com/. Submissions should be prepared in LaTeX\, adhering to the ACM format available at https://www.acm.org/publications/proceedings-template using the “sigplan” option. \nPublication: \nAll accepted papers will appear in the pre-proceedings of FTSCS 2023. Accepted papers in the categories A-D above will appear in the workshop proceedings that will be published as a volume in the ACM Digital Library. \nAs usual\, we also plan to invite authors of some accepted papers to submit extended versions of their papers to a special issue of the Science of Computer Programming journal (to be confirmed). \nImportant dates: \n \n Submission deadline: July 12\, 2023 July 21\, 2023 (AoE) \n Notification of acceptance: August 26\, 2023 \n Camera ready paper due: September 10\, 2023 \n Workshop: October 22\, 2023 \n
LOCATION:Room IV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T130000Z
DTEND:20231022T143000Z
DTSTAMP:20231021T100613Z
UID:fc41cd37-3361-4090-bb3a-6b6f029e633d@conf.researchr.org
CREATED:20230913T184528Z
SUMMARY:HATRA: Interactivity and Visualization for Programmers
DESCRIPTION:\n\nProgramming language designers seek to provide strong tools to help developers reason about their programs. For example\, the formal methods community seeks to enable developers to prove correctness properties of their code\, and type system designers seek to exclude classes of undesirable behavior from programs. The security community creates tools to help developers achieve their security goals. In order to make these approaches as effective as possible for developers\, recent work has integrated approaches from human-computer interaction research into programming language design. This workshop brings together programming languages\, software engineering\, security\, and human-computer interaction researchers to investigate methods for making languages that provide stronger safety properties more effective for programmers and software engineers. \nWe have two goals: (1) to provide a venue for discussion and feedback on early-stage approaches that might enable people to be more effective at achieving stronger safety properties in their programs\; (2) to facilitate discussion about relevant topics of participant interest. \nHATRA is interested in two different kinds of contributions. First\, extended abstracts that summarize an existing body of work that is relevant to the workshop’s topic\; the presentations serve to familiarize the community\, which may be diverse\, with work that already exists. Second\, research papers that describe a new idea\, approach\, or hypothesis in the space and are presented as an opportunity for the authors to receive community feedback and for the community to seek inspiration from others. \nThe day will be divided into two segments. In the first segment\, authors of accepted papers will present their work. In the second segment\, we will conduct an “unconference”-style meeting. By allowing the participants to drive the agenda\, we hope to focus on topics that provide stimulating and enlightening discussion. \nHATRA 2023 will be a hybrid workshop. Participants will be able to join and present in person or remotely.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T130000Z
DTEND:20231022T143000Z
DTSTAMP:20231021T100613Z
UID:2c35d219-0737-4e03-9a02-ee30f49d3a42@conf.researchr.org
CREATED:20230913T164935Z
SUMMARY:ST30 : ST30 Day 1 Session 3
DESCRIPTION:ST30 : ST30 Day 1 Session 3\nSession Chair(s): Peter Thiemann\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T130000Z
DTEND:20231022T143000Z
DTSTAMP:20231021T100613Z
UID:024c6ac9-7d2e-4f0c-b77b-6a364e0f2d29@conf.researchr.org
CREATED:20230918T135451Z
SUMMARY:GPCE: Session 2
DESCRIPTION:\n\nACM SIGPLAN International Conference on Generative Programming: Concepts &amp\; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation\, domain-specific languages\, and component deployment to increase programmer productivity\, improve software quality\, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software\, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities. \nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis\, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations\, and corresponding Implementation Technologies aiming at modularity\, correctness\, reuse\, and evolution. As the field matures Applications and Empirical Results are of increasing importance. \nGPCE 2023 will be co-located with SPLASH\, SAS\, and SLE. The conference will be hosted in Lisbon\, Portugal. \nConference website: https://conf.researchr.org/home/gpce-2023 \nSubmission site: https://gpce23.hotcrp.com/ \nGPCE conference series: https://conf.researchr.org/series/gpce \ntwitter: https://twitter.com/gpceconf (@GPCECONF)
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T150000Z
DTEND:20231022T163000Z
DTSTAMP:20231021T100613Z
UID:e05dd12e-6939-44ec-b0bc-57a1189b1b5f@conf.researchr.org
CREATED:20230916T194809Z
SUMMARY:PPDP: Session 4
DESCRIPTION:PPDP: Session 4\nSession Chair(s): Santiago Escobar\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T150000Z
DTEND:20231022T163000Z
DTSTAMP:20231021T100613Z
UID:79105f4b-fe4e-4dc5-a951-fc66bae5db06@conf.researchr.org
CREATED:20230913T194620Z
SUMMARY:SAS : Quantum\, neural
DESCRIPTION:SAS : Quantum\, neural\nSession Chair(s): Roberto Giacobazzi\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T150000Z
DTEND:20231022T163000Z
DTSTAMP:20231021T100613Z
UID:de60b5d8-7dc9-4749-897c-c24e849a2464@conf.researchr.org
CREATED:20230911T231134Z
SUMMARY:MPLR: MPLR Session 4
DESCRIPTION:MPLR: MPLR Session 4\nSession Chair(s): Stefan Marr\n\nThe 20th International Conference on Managed Programming Languages &amp\; Runtimes (MPLR’23\, formerly ManLang\, originally PPPJ) is a premier forum for presenting and discussing novel results in all aspects of managed programming languages and runtime systems\, which serve as building blocks for some of the most important computing systems around\, ranging from small-scale (embedded and real-time systems) to large-scale (cloud-computing and big-data platforms) and anything in between (mobile\, IoT\, and wearable applications). \nPapers accepted by MPLR’23 describe original research results and have not been published anywhere else. Each submitted paper has received a minimum of three reviews by members of the program committee. Papers have been selected based on their originality\, relevance\, technical clarity\, and quality of presentation. At least one author of each accepted paper must register for the MPLR’23 symposium and present the paper.
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T150000Z
DTEND:20231022T163000Z
DTSTAMP:20231021T100613Z
UID:571205fa-565f-4c72-b965-b0aab6050f38@conf.researchr.org
CREATED:20230913T184009Z
SUMMARY:HATRA: Type Systems and Discussion
DESCRIPTION:\n\nProgramming language designers seek to provide strong tools to help developers reason about their programs. For example\, the formal methods community seeks to enable developers to prove correctness properties of their code\, and type system designers seek to exclude classes of undesirable behavior from programs. The security community creates tools to help developers achieve their security goals. In order to make these approaches as effective as possible for developers\, recent work has integrated approaches from human-computer interaction research into programming language design. This workshop brings together programming languages\, software engineering\, security\, and human-computer interaction researchers to investigate methods for making languages that provide stronger safety properties more effective for programmers and software engineers. \nWe have two goals: (1) to provide a venue for discussion and feedback on early-stage approaches that might enable people to be more effective at achieving stronger safety properties in their programs\; (2) to facilitate discussion about relevant topics of participant interest. \nHATRA is interested in two different kinds of contributions. First\, extended abstracts that summarize an existing body of work that is relevant to the workshop’s topic\; the presentations serve to familiarize the community\, which may be diverse\, with work that already exists. Second\, research papers that describe a new idea\, approach\, or hypothesis in the space and are presented as an opportunity for the authors to receive community feedback and for the community to seek inspiration from others. \nThe day will be divided into two segments. In the first segment\, authors of accepted papers will present their work. In the second segment\, we will conduct an “unconference”-style meeting. By allowing the participants to drive the agenda\, we hope to focus on topics that provide stimulating and enlightening discussion. \nHATRA 2023 will be a hybrid workshop. Participants will be able to join and present in person or remotely.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T150000Z
DTEND:20231022T163000Z
DTSTAMP:20231021T100613Z
UID:76a36802-e53b-40e6-b267-a3eacc818a55@conf.researchr.org
CREATED:20230913T165022Z
SUMMARY:ST30 : ST30 Day 1 Session 4
DESCRIPTION:ST30 : ST30 Day 1 Session 4\nSession Chair(s): Diana Costa\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T150000Z
DTEND:20231022T163000Z
DTSTAMP:20231021T100613Z
UID:af94b379-2379-454c-b883-f158626fa5fa@conf.researchr.org
CREATED:20231009T215432Z
SUMMARY:GPCE: GPCE 2022/23 Most Influential Papers
DESCRIPTION:\n\nACM SIGPLAN International Conference on Generative Programming: Concepts &amp\; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation\, domain-specific languages\, and component deployment to increase programmer productivity\, improve software quality\, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software\, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities. \nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis\, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations\, and corresponding Implementation Technologies aiming at modularity\, correctness\, reuse\, and evolution. As the field matures Applications and Empirical Results are of increasing importance. \nGPCE 2023 will be co-located with SPLASH\, SAS\, and SLE. The conference will be hosted in Lisbon\, Portugal. \nConference website: https://conf.researchr.org/home/gpce-2023 \nSubmission site: https://gpce23.hotcrp.com/ \nGPCE conference series: https://conf.researchr.org/series/gpce \ntwitter: https://twitter.com/gpceconf (@GPCECONF)
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231022T163000Z
DTEND:20231022T183000Z
DTSTAMP:20231021T100613Z
UID:dafdf04c-ea53-49e9-bd10-b188c50fe154@conf.researchr.org
CREATED:20231010T192404Z
SUMMARY:SPLASH Posters: SPLASH Posters
DESCRIPTION:SPLASH Posters: SPLASH Posters\nSession Chair(s): Xujie Si\n\nThe SPLASH Posters track provides an excellent forum for authors to present their recent or ongoing projects in an interactive setting\, and receive feedback from the community. We invite submissions covering any aspect of programming\, systems\, languages and applications. The goal of the poster session is to encourage and facilitate small groups of individuals interested in a technical area to gather and interact. It is held early in the conference\, to promote continued discussion among interested parties. \nPoster Presentation Logistics \nThere will be two sessions for poster presentations: Sunday evening\, 5:30 PM - 7:30 PM\, Oct 22\, 2023\, and Tuesday evening\, 5:30 PM - 7:30 PM\, Oct 24\, 2023 . The first session is reserved for posters from the SPLASH 2023 Posters Track\, while the second session is reserved for posters from the Student Research Competition\, OOPSLA/Onward! papers/essays. Authors are encouraged to present their work in both sessions (if space permits\, which is very likely). \nSize of the poster board: 135 cm (height) x 90 cm (width). The recommended poster sizes are A0 (portrait) or A1 (landscape).
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:663b7c81-fbda-4de6-9d9f-1986d26334a0@conf.researchr.org
CREATED:20230916T194814Z
SUMMARY:PPDP: Session 5
DESCRIPTION:PPDP: Session 5\nSession Chair(s): Ugo de'Liguoro\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:6f5d1fa1-c871-476f-96d6-c2da659903a2@conf.researchr.org
CREATED:20230913T204614Z
SUMMARY:SAS : Session 5
DESCRIPTION:SAS : Session 5\nSession Chair(s): Enea Zaffanella\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:7fc994b9-6f98-4e0c-9dfa-9bbdf1df68c1@conf.researchr.org
CREATED:20231003T102034Z
SUMMARY:SLE: Language implementation
DESCRIPTION:SLE: Language implementation\nSession Chair(s): Vadim Zaytsev\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:9e0c18d7-cf74-420a-8169-2af286af7eda@conf.researchr.org
CREATED:20230918T150154Z
SUMMARY:SPLASH PLMW: Welcome\, Ice Breaker\, Mentoring Talk
DESCRIPTION:SPLASH PLMW: Welcome\, Ice Breaker\, Mentoring Talk\nSession Chair(s): João F. Ferreira\, Molly Feldman\n\n \n We will only stream and record the first session of the workshop. \n Interested in helping mentor our students? Sign up here! \n \nThe SPLASH Programming Languages Mentoring Workshop encourages graduate students (PhD and MSc) and senior undergraduate students to pursue research in programming languages. This workshop will provide mentoring sessions on how to prepare for and thrive in graduate school and in a research career\, focusing both on cutting-edge research topics and practical advice. The workshop brings together leading researchers and junior students in an inclusive environment in order to help welcome newcomers to our field of programming languages research. The workshop will show students the many paths that they might take to enter and contribute to our research community. \nPLMW’s core mission is to foster the development of the next generation of researchers in our community. PLMW typically is a one-day (in-person) workshop with invited talks on research topics and practical advice\, with ad-hoc mentoring taking place throughout the day\, especially during breakfast\, lunch\, dinner and coffee breaks. PLMW@SPLASH mentoring will consist of a mix of small-group mentoring sessions\, where students can chat with mentors in small groups (organized by topics) and large-group “ask-me-anything” sessions. Topics covered will include: \n \n How to network effectively at a conference? How to find your cohort? How to find a mentor and what to look for? \n What communication skills are essential for a research career? To give a good presentation? A good poster session talk? To write an outstanding paper? \n How do people pick their research area of interest or your advisor/mentor? \n What are the new\, emerging areas in PL/SE? \n What are the differences between a research career in industry and in academia? \n What are the important work/life issues researchers deal with? \n How did PL/SE researchers successfully navigate their training experiences? \n \n \nStudents who are interested in attending the workshop and would like to request funding to do so must fill out a short application. The deadline has now passed. \n \nPLMW Perspectives \nCheck out our PLMW Video Perspectives below:  \n \n \n \n  \n  \n "PLMW changed my life and my career trajectory. I honestly applied to POPL on a whim one year because I was working a low-wage job in Los Angeles (where POPL was being held) and being a PhD student volunteer was the only way I could afford to attend. ACM conferences can be expensive. It was only after volunteering at that conference and talking to Ranjit Jhala that I had it in my head that I might pursue a PhD. But in what\, and how? And no one I work with has a PhD or gone to grad school for Computer Science\, much less PL. This is where PLMW came in. Almost immediately\, I met someone who had not only travelled a similar path\, but openly engaged with me\, and others who told me to follow up with them for help and mentorship applying to schools. Others I met even encouraged me to submit a paper or collaborate on a research paper with them. I had never written a single research paper before. I went from Pallet Jacks and helping 53 foot trucks back into a facility\, hearing the sound of welding and machining all day\, while sitting at a computer trying out small programmes in LISP\, to being a fully-funded PhD student within a year. I owe a lot of that to PLMW."  — Krystal Maughan\, PhD student\, University of Vermont \n \n \n \n  \n  \n "I went to my first PLMW in 2012\, which was at a time where I had not really thought much about applying for PhD programs. PLMW's program taught me tons of things about research that I did not know\, and was the first time I seriously considered an academic career. I still think back to some of the advice I got there whenever I write a paper or prepare a presentation. More importantly\, participating in PLMW meant I was also there for one of the main conferences on Programming Languages and thus got to see the world's experts in the field present and discuss their work. That was slightly scary\, but it turns out that people usually love it when somebody shares their interests. Lastly\, but possibly most importantly\, the people I met there for the first time became the friendly faces I already knew whenever I went to a conference afterward.”  — Fabian Muehlboeck\, post-doctoral researcher\, Institute of Science and Technology Austria  \n \n \n \n  \n  \n "I attended my first PLMW in 2017\, having previously taken one programming languages course. I definitely did not understand most of the technical talks given at PLMW\, and that's okay. My experience at PLMW greatly influenced my path since then. I got great advice for how to write papers and talks from Derek Dreyer's presentation\, which has helped me ever since. I also applied to graduate school with a special interest in compiler correctness because of Amal Ahmed's talk during this same PLMW. I am currently starting my second year of my PhD program researching type preserving compilation because of PLMW. I also made wonderful friends who I still keep in touch with. ”  — Paulette Koronkevich\, PhD student\, University of British Columbia \n \n \n  “Big PL conferences were very intimidating to me\, and PLMW takes the edge off that a lot. Having a community willing to teach you soft and technical skills is welcoming and helped me feel part of the fold. Besides that the lessons were very useful\, PLMW has been very influential in how I write papers.”  — Simon Cooksey\, post-doctoral researcher\, University of Kent \n \n \n "Coming from industry\, PLMW made the world of PL research feel much more accessible than it had prior to my attendance. Even though it was remote\, I felt I had the opportunity to engage with researchers and other prospective graduate students to get a sense of what PL research is like on a day-to-day basis. It also gave me perspective on the types of career tracks available after graduate school and how people find those opportunities. While I ended up choosing to stay in industry\, PLMW helped me feel comfortable with that decision while also having a better sense of how to bring academic ideas into industry. ”  — Rory Sawyer\, software engineer \n \nWant even more perspectives from previous attendees? Click here! \nSponsors \n
LOCATION:Room III - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:eeb10aa0-c822-4568-aa04-952445d23254@conf.researchr.org
CREATED:20231012T154700Z
SUMMARY:REBLS: keynote
DESCRIPTION:REBLS: keynote\nSession Chair(s): Vadim Zaytsev\n\nReactive programming and event-based programming are two closely related programming styles that are becoming ever more important with the advent of advanced HPC technology and the ever increasing requirement for our applications to run on the web or on collaborating mobile devices. A number of publications on middleware and language design — so-called reactive and event-based languages and systems (REBLS) — have already seen the light\, but the field still raises several questions. For example\, the interaction with mainstream language concepts is poorly understood\, implementation technology is in its infancy and modularity mechanisms are almost totally lacking. Moreover\, large applications are still to be developed and patterns and tools for developing reactive applications is an area that is vastly unexplored. \nThis workshop will gather researchers in reactive and event-based languages and systems. The goal of the workshop is to exchange new technical research results and to define better the field by coming up with taxonomies and overviews of the existing work.
LOCATION:Room IV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:cca60686-39c1-4ef7-9883-24e75cd95173@conf.researchr.org
CREATED:20230918T102712Z
SUMMARY:PAINT: PAINT 2023 - Session 1
DESCRIPTION:\n\n \nProgramming environments that integrate tools\, notations\, and abstractions into a holistic user experience can provide programmers with better support for what they want to achieve. These programming environments can create an engaging place to do new forms of informational work - resulting in enjoyable\, creative\, and productive experiences with programming. \nIn the workshop on Programming Abstractions and Interactive Notations\, Tools\, and Environments (PAINT)\, we want to discuss programming environments that support users in working with and creating notations and abstractions that matter to them. We are interested in the relationship between people centric notations and general-purpose programming languages and environments. How do we reflect the various experiences\, needs\, and priorities of the many people involved in programming — whether they call it that or not?
LOCATION:Room V - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:a8e8ce71-9bec-4c75-8f7e-2237233e9eb5@conf.researchr.org
CREATED:20230918T130853Z
SUMMARY:VMIL: Session #1
DESCRIPTION:VMIL: Session #1\nSession Chair(s): Andrea Rosà\n\nThe concept of Virtual Machines is pervasive in the design and implementation of programming systems. Virtual Machines and the languages they implement are crucial in the specification\, implementation and/or user-facing deployment of most programming technologies. \nThe VMIL workshop is a forum for researchers and cutting-edge practitioners in language virtual machines\, the intermediate languages they use\, and related issues.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:b911c895-bff6-49d9-94f9-16a73d5c0773@conf.researchr.org
CREATED:20230921T111006Z
SUMMARY:LIVE: LIVE 2023 Opening / creative domains for LIVE programming
DESCRIPTION:\n\nWhere UX meets PL \nProgramming is cognitively demanding\, and too difficult. LIVE is a workshop exploring new user interfaces that improve the immediacy\, usability\, and learnability of programming. Whereas PL research traditionally focuses on programs\, LIVE focuses more on the activity of programming. \n \nThemes \nProgrammers don’t materialize programs out of thin air\, but construct them out of existing programs. Embracing this insight leads to a different focus at LIVE compared to traditional PL workshops. Here are some of the qualities that we care about: \n \n Live. Live programming systems give the programmer immediate feedback on the output of a program as it is being edited\, replacing the edit-compile-debug cycle with a fluid programming experience. Liveness can also mean providing feedback about how the static meaning of the program is changing\, such as its type. \n Structured. A program is highly structured and meaningful to the programmer\, even in traditionally invalid states. “Structure-aware” programming environments understand and preserve that structure\, and allow operations at the level of the structure\, rather than at the level of raw text. \n Tangible. In the traditional view of programs\, execution takes place behind the scenes\, and leaves little record of what happened. We are interested in programming systems that make execution transparent\, tangible and explorable. \n Concrete. People find it easier to start with concrete examples and generalize afterwards. Programming tools tailored to people will support this mode of working. \n \nThe majority of LIVE submissions are demonstrations of novel programming systems. Technical papers\, insightful and clearly articulated experience reports\, theoretical papers that propose and verify generalized principles\, literature reviews\, and position papers are also welcome. \nOur goal is to provide a supportive venue where early-stage work receives constructive criticism. Whether graduate students or tenured faculty\, researchers need a forum to discuss new ideas and get helpful feedback from their peers. Towards that end\, we will allot about ten minutes for discussion after every presentation.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:e70e334f-0496-4cf3-8b14-5561cb25d910@conf.researchr.org
CREATED:20230913T165406Z
SUMMARY:ST30 : ST30 Day 2 Session 1
DESCRIPTION:ST30 : ST30 Day 2 Session 1\nSession Chair(s): Alceste Scalas\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T080000Z
DTEND:20231023T093000Z
DTSTAMP:20231021T100613Z
UID:4f3bdb34-d9ea-47c3-9ee0-f7f1c84a87b2@conf.researchr.org
CREATED:20230919T114620Z
SUMMARY:GPCE: GPCE Tutorial
DESCRIPTION:\n\nACM SIGPLAN International Conference on Generative Programming: Concepts &amp\; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation\, domain-specific languages\, and component deployment to increase programmer productivity\, improve software quality\, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software\, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities. \nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis\, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations\, and corresponding Implementation Technologies aiming at modularity\, correctness\, reuse\, and evolution. As the field matures Applications and Empirical Results are of increasing importance. \nGPCE 2023 will be co-located with SPLASH\, SAS\, and SLE. The conference will be hosted in Lisbon\, Portugal. \nConference website: https://conf.researchr.org/home/gpce-2023 \nSubmission site: https://gpce23.hotcrp.com/ \nGPCE conference series: https://conf.researchr.org/series/gpce \ntwitter: https://twitter.com/gpceconf (@GPCECONF)
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:30320ea4-1afd-4976-a602-080dd4288084@conf.researchr.org
CREATED:20230916T194820Z
SUMMARY:PPDP: Session 6
DESCRIPTION:PPDP: Session 6\nSession Chair(s): Santiago Escobar\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:daed25a0-82bf-49d3-956d-62ae96ebd4b2@conf.researchr.org
CREATED:20230913T205750Z
SUMMARY:SAS : Modular arithmetic and numeric analysis
DESCRIPTION:SAS : Modular arithmetic and numeric analysis\nSession Chair(s): Daniel Kaestner\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:0fa7fed9-5f97-4a47-98ac-c98460acf816@conf.researchr.org
CREATED:20231003T160330Z
SUMMARY:SLE: GPCE/SLE Keynote (in Room XV)
DESCRIPTION:\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:0230cc03-f67e-447e-aa52-616b85c2d537@conf.researchr.org
CREATED:20230918T150249Z
SUMMARY:SPLASH PLMW: Mentoring Talk & PhD Panel
DESCRIPTION:SPLASH PLMW: Mentoring Talk & PhD Panel\nSession Chair(s): Molly Feldman\n\n \n We will only stream and record the first session of the workshop. \n Interested in helping mentor our students? Sign up here! \n \nThe SPLASH Programming Languages Mentoring Workshop encourages graduate students (PhD and MSc) and senior undergraduate students to pursue research in programming languages. This workshop will provide mentoring sessions on how to prepare for and thrive in graduate school and in a research career\, focusing both on cutting-edge research topics and practical advice. The workshop brings together leading researchers and junior students in an inclusive environment in order to help welcome newcomers to our field of programming languages research. The workshop will show students the many paths that they might take to enter and contribute to our research community. \nPLMW’s core mission is to foster the development of the next generation of researchers in our community. PLMW typically is a one-day (in-person) workshop with invited talks on research topics and practical advice\, with ad-hoc mentoring taking place throughout the day\, especially during breakfast\, lunch\, dinner and coffee breaks. PLMW@SPLASH mentoring will consist of a mix of small-group mentoring sessions\, where students can chat with mentors in small groups (organized by topics) and large-group “ask-me-anything” sessions. Topics covered will include: \n \n How to network effectively at a conference? How to find your cohort? How to find a mentor and what to look for? \n What communication skills are essential for a research career? To give a good presentation? A good poster session talk? To write an outstanding paper? \n How do people pick their research area of interest or your advisor/mentor? \n What are the new\, emerging areas in PL/SE? \n What are the differences between a research career in industry and in academia? \n What are the important work/life issues researchers deal with? \n How did PL/SE researchers successfully navigate their training experiences? \n \n \nStudents who are interested in attending the workshop and would like to request funding to do so must fill out a short application. The deadline has now passed. \n \nPLMW Perspectives \nCheck out our PLMW Video Perspectives below:  \n \n \n \n  \n  \n "PLMW changed my life and my career trajectory. I honestly applied to POPL on a whim one year because I was working a low-wage job in Los Angeles (where POPL was being held) and being a PhD student volunteer was the only way I could afford to attend. ACM conferences can be expensive. It was only after volunteering at that conference and talking to Ranjit Jhala that I had it in my head that I might pursue a PhD. But in what\, and how? And no one I work with has a PhD or gone to grad school for Computer Science\, much less PL. This is where PLMW came in. Almost immediately\, I met someone who had not only travelled a similar path\, but openly engaged with me\, and others who told me to follow up with them for help and mentorship applying to schools. Others I met even encouraged me to submit a paper or collaborate on a research paper with them. I had never written a single research paper before. I went from Pallet Jacks and helping 53 foot trucks back into a facility\, hearing the sound of welding and machining all day\, while sitting at a computer trying out small programmes in LISP\, to being a fully-funded PhD student within a year. I owe a lot of that to PLMW."  — Krystal Maughan\, PhD student\, University of Vermont \n \n \n \n  \n  \n "I went to my first PLMW in 2012\, which was at a time where I had not really thought much about applying for PhD programs. PLMW's program taught me tons of things about research that I did not know\, and was the first time I seriously considered an academic career. I still think back to some of the advice I got there whenever I write a paper or prepare a presentation. More importantly\, participating in PLMW meant I was also there for one of the main conferences on Programming Languages and thus got to see the world's experts in the field present and discuss their work. That was slightly scary\, but it turns out that people usually love it when somebody shares their interests. Lastly\, but possibly most importantly\, the people I met there for the first time became the friendly faces I already knew whenever I went to a conference afterward.”  — Fabian Muehlboeck\, post-doctoral researcher\, Institute of Science and Technology Austria  \n \n \n \n  \n  \n "I attended my first PLMW in 2017\, having previously taken one programming languages course. I definitely did not understand most of the technical talks given at PLMW\, and that's okay. My experience at PLMW greatly influenced my path since then. I got great advice for how to write papers and talks from Derek Dreyer's presentation\, which has helped me ever since. I also applied to graduate school with a special interest in compiler correctness because of Amal Ahmed's talk during this same PLMW. I am currently starting my second year of my PhD program researching type preserving compilation because of PLMW. I also made wonderful friends who I still keep in touch with. ”  — Paulette Koronkevich\, PhD student\, University of British Columbia \n \n \n  “Big PL conferences were very intimidating to me\, and PLMW takes the edge off that a lot. Having a community willing to teach you soft and technical skills is welcoming and helped me feel part of the fold. Besides that the lessons were very useful\, PLMW has been very influential in how I write papers.”  — Simon Cooksey\, post-doctoral researcher\, University of Kent \n \n \n "Coming from industry\, PLMW made the world of PL research feel much more accessible than it had prior to my attendance. Even though it was remote\, I felt I had the opportunity to engage with researchers and other prospective graduate students to get a sense of what PL research is like on a day-to-day basis. It also gave me perspective on the types of career tracks available after graduate school and how people find those opportunities. While I ended up choosing to stay in industry\, PLMW helped me feel comfortable with that decision while also having a better sense of how to bring academic ideas into industry. ”  — Rory Sawyer\, software engineer \n \nWant even more perspectives from previous attendees? Click here! \nSponsors \n
LOCATION:Room III - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:4792b00c-b096-49d1-9b6b-0003a50f8615@conf.researchr.org
CREATED:20230916T214807Z
SUMMARY:REBLS: Technical session 1
DESCRIPTION:\n\nReactive programming and event-based programming are two closely related programming styles that are becoming ever more important with the advent of advanced HPC technology and the ever increasing requirement for our applications to run on the web or on collaborating mobile devices. A number of publications on middleware and language design — so-called reactive and event-based languages and systems (REBLS) — have already seen the light\, but the field still raises several questions. For example\, the interaction with mainstream language concepts is poorly understood\, implementation technology is in its infancy and modularity mechanisms are almost totally lacking. Moreover\, large applications are still to be developed and patterns and tools for developing reactive applications is an area that is vastly unexplored. \nThis workshop will gather researchers in reactive and event-based languages and systems. The goal of the workshop is to exchange new technical research results and to define better the field by coming up with taxonomies and overviews of the existing work.
LOCATION:Room IV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:b7679544-5460-4b18-ab6a-a373136ee124@conf.researchr.org
CREATED:20230918T102737Z
SUMMARY:PAINT: PAINT 2023 - Session 2
DESCRIPTION:\n\n \nProgramming environments that integrate tools\, notations\, and abstractions into a holistic user experience can provide programmers with better support for what they want to achieve. These programming environments can create an engaging place to do new forms of informational work - resulting in enjoyable\, creative\, and productive experiences with programming. \nIn the workshop on Programming Abstractions and Interactive Notations\, Tools\, and Environments (PAINT)\, we want to discuss programming environments that support users in working with and creating notations and abstractions that matter to them. We are interested in the relationship between people centric notations and general-purpose programming languages and environments. How do we reflect the various experiences\, needs\, and priorities of the many people involved in programming — whether they call it that or not?
LOCATION:Room V - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:33fcfacd-8ae3-4334-ac8a-02f4d26e3958@conf.researchr.org
CREATED:20230918T130947Z
SUMMARY:VMIL: Session #2: Keynote
DESCRIPTION:VMIL: Session #2: Keynote\nSession Chair(s): Andrea Rosà\n\nThe concept of Virtual Machines is pervasive in the design and implementation of programming systems. Virtual Machines and the languages they implement are crucial in the specification\, implementation and/or user-facing deployment of most programming technologies. \nThe VMIL workshop is a forum for researchers and cutting-edge practitioners in language virtual machines\, the intermediate languages they use\, and related issues.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:d28a1219-792a-4e2f-b6ac-1a815560cd0d@conf.researchr.org
CREATED:20231002T073706Z
SUMMARY:LOPSTR: Session I
DESCRIPTION:LOPSTR: Session I\nSession Chair(s): Santiago Escobar\, Robert Glück\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:da27f544-2075-4587-a705-95280ec1c000@conf.researchr.org
CREATED:20230921T105426Z
SUMMARY:LIVE: Theoretical problems in LIVE programming
DESCRIPTION:\n\nWhere UX meets PL \nProgramming is cognitively demanding\, and too difficult. LIVE is a workshop exploring new user interfaces that improve the immediacy\, usability\, and learnability of programming. Whereas PL research traditionally focuses on programs\, LIVE focuses more on the activity of programming. \n \nThemes \nProgrammers don’t materialize programs out of thin air\, but construct them out of existing programs. Embracing this insight leads to a different focus at LIVE compared to traditional PL workshops. Here are some of the qualities that we care about: \n \n Live. Live programming systems give the programmer immediate feedback on the output of a program as it is being edited\, replacing the edit-compile-debug cycle with a fluid programming experience. Liveness can also mean providing feedback about how the static meaning of the program is changing\, such as its type. \n Structured. A program is highly structured and meaningful to the programmer\, even in traditionally invalid states. “Structure-aware” programming environments understand and preserve that structure\, and allow operations at the level of the structure\, rather than at the level of raw text. \n Tangible. In the traditional view of programs\, execution takes place behind the scenes\, and leaves little record of what happened. We are interested in programming systems that make execution transparent\, tangible and explorable. \n Concrete. People find it easier to start with concrete examples and generalize afterwards. Programming tools tailored to people will support this mode of working. \n \nThe majority of LIVE submissions are demonstrations of novel programming systems. Technical papers\, insightful and clearly articulated experience reports\, theoretical papers that propose and verify generalized principles\, literature reviews\, and position papers are also welcome. \nOur goal is to provide a supportive venue where early-stage work receives constructive criticism. Whether graduate students or tenured faculty\, researchers need a forum to discuss new ideas and get helpful feedback from their peers. Towards that end\, we will allot about ten minutes for discussion after every presentation.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:a74a654c-2242-454c-883e-439aaf90238f@conf.researchr.org
CREATED:20230913T165324Z
SUMMARY:ST30 : ST30 Day 2 Session 2
DESCRIPTION:ST30 : ST30 Day 2 Session 2\nSession Chair(s): Frank Pfenning\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T100000Z
DTEND:20231023T113000Z
DTSTAMP:20231021T100613Z
UID:9b46a537-835f-48c6-a8cb-8dec94181df5@conf.researchr.org
CREATED:20230918T135238Z
SUMMARY:GPCE: GPCE/SLE Keynote
DESCRIPTION:\n\nACM SIGPLAN International Conference on Generative Programming: Concepts &amp\; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation\, domain-specific languages\, and component deployment to increase programmer productivity\, improve software quality\, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software\, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities. \nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis\, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations\, and corresponding Implementation Technologies aiming at modularity\, correctness\, reuse\, and evolution. As the field matures Applications and Empirical Results are of increasing importance. \nGPCE 2023 will be co-located with SPLASH\, SAS\, and SLE. The conference will be hosted in Lisbon\, Portugal. \nConference website: https://conf.researchr.org/home/gpce-2023 \nSubmission site: https://gpce23.hotcrp.com/ \nGPCE conference series: https://conf.researchr.org/series/gpce \ntwitter: https://twitter.com/gpceconf (@GPCECONF)
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:3225ebd7-3e1c-42c6-ae85-a1387de154af@conf.researchr.org
CREATED:20230916T194825Z
SUMMARY:PPDP: Session 7
DESCRIPTION:PPDP: Session 7\nSession Chair(s): Santiago Escobar\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:0788257c-167e-4888-bef4-a755bc1a935c@conf.researchr.org
CREATED:20230913T204629Z
SUMMARY:SAS : Error location and scaling
DESCRIPTION:SAS : Error location and scaling\nSession Chair(s): Andy King\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:499d5c3c-97eb-4c84-a909-582935320bed@conf.researchr.org
CREATED:20231003T102127Z
SUMMARY:SLE: Grammars and parsing
DESCRIPTION:SLE: Grammars and parsing\nSession Chair(s): Luis Eduardo de Souza Amorim\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:e8d010ee-a564-4301-86bf-560f30197805@conf.researchr.org
CREATED:20230918T150317Z
SUMMARY:SPLASH PLMW: Career Panel
DESCRIPTION:SPLASH PLMW: Career Panel\nSession Chair(s): João F. Ferreira\n\n \n We will only stream and record the first session of the workshop. \n Interested in helping mentor our students? Sign up here! \n \nThe SPLASH Programming Languages Mentoring Workshop encourages graduate students (PhD and MSc) and senior undergraduate students to pursue research in programming languages. This workshop will provide mentoring sessions on how to prepare for and thrive in graduate school and in a research career\, focusing both on cutting-edge research topics and practical advice. The workshop brings together leading researchers and junior students in an inclusive environment in order to help welcome newcomers to our field of programming languages research. The workshop will show students the many paths that they might take to enter and contribute to our research community. \nPLMW’s core mission is to foster the development of the next generation of researchers in our community. PLMW typically is a one-day (in-person) workshop with invited talks on research topics and practical advice\, with ad-hoc mentoring taking place throughout the day\, especially during breakfast\, lunch\, dinner and coffee breaks. PLMW@SPLASH mentoring will consist of a mix of small-group mentoring sessions\, where students can chat with mentors in small groups (organized by topics) and large-group “ask-me-anything” sessions. Topics covered will include: \n \n How to network effectively at a conference? How to find your cohort? How to find a mentor and what to look for? \n What communication skills are essential for a research career? To give a good presentation? A good poster session talk? To write an outstanding paper? \n How do people pick their research area of interest or your advisor/mentor? \n What are the new\, emerging areas in PL/SE? \n What are the differences between a research career in industry and in academia? \n What are the important work/life issues researchers deal with? \n How did PL/SE researchers successfully navigate their training experiences? \n \n \nStudents who are interested in attending the workshop and would like to request funding to do so must fill out a short application. The deadline has now passed. \n \nPLMW Perspectives \nCheck out our PLMW Video Perspectives below:  \n \n \n \n  \n  \n "PLMW changed my life and my career trajectory. I honestly applied to POPL on a whim one year because I was working a low-wage job in Los Angeles (where POPL was being held) and being a PhD student volunteer was the only way I could afford to attend. ACM conferences can be expensive. It was only after volunteering at that conference and talking to Ranjit Jhala that I had it in my head that I might pursue a PhD. But in what\, and how? And no one I work with has a PhD or gone to grad school for Computer Science\, much less PL. This is where PLMW came in. Almost immediately\, I met someone who had not only travelled a similar path\, but openly engaged with me\, and others who told me to follow up with them for help and mentorship applying to schools. Others I met even encouraged me to submit a paper or collaborate on a research paper with them. I had never written a single research paper before. I went from Pallet Jacks and helping 53 foot trucks back into a facility\, hearing the sound of welding and machining all day\, while sitting at a computer trying out small programmes in LISP\, to being a fully-funded PhD student within a year. I owe a lot of that to PLMW."  — Krystal Maughan\, PhD student\, University of Vermont \n \n \n \n  \n  \n "I went to my first PLMW in 2012\, which was at a time where I had not really thought much about applying for PhD programs. PLMW's program taught me tons of things about research that I did not know\, and was the first time I seriously considered an academic career. I still think back to some of the advice I got there whenever I write a paper or prepare a presentation. More importantly\, participating in PLMW meant I was also there for one of the main conferences on Programming Languages and thus got to see the world's experts in the field present and discuss their work. That was slightly scary\, but it turns out that people usually love it when somebody shares their interests. Lastly\, but possibly most importantly\, the people I met there for the first time became the friendly faces I already knew whenever I went to a conference afterward.”  — Fabian Muehlboeck\, post-doctoral researcher\, Institute of Science and Technology Austria  \n \n \n \n  \n  \n "I attended my first PLMW in 2017\, having previously taken one programming languages course. I definitely did not understand most of the technical talks given at PLMW\, and that's okay. My experience at PLMW greatly influenced my path since then. I got great advice for how to write papers and talks from Derek Dreyer's presentation\, which has helped me ever since. I also applied to graduate school with a special interest in compiler correctness because of Amal Ahmed's talk during this same PLMW. I am currently starting my second year of my PhD program researching type preserving compilation because of PLMW. I also made wonderful friends who I still keep in touch with. ”  — Paulette Koronkevich\, PhD student\, University of British Columbia \n \n \n  “Big PL conferences were very intimidating to me\, and PLMW takes the edge off that a lot. Having a community willing to teach you soft and technical skills is welcoming and helped me feel part of the fold. Besides that the lessons were very useful\, PLMW has been very influential in how I write papers.”  — Simon Cooksey\, post-doctoral researcher\, University of Kent \n \n \n "Coming from industry\, PLMW made the world of PL research feel much more accessible than it had prior to my attendance. Even though it was remote\, I felt I had the opportunity to engage with researchers and other prospective graduate students to get a sense of what PL research is like on a day-to-day basis. It also gave me perspective on the types of career tracks available after graduate school and how people find those opportunities. While I ended up choosing to stay in industry\, PLMW helped me feel comfortable with that decision while also having a better sense of how to bring academic ideas into industry. ”  — Rory Sawyer\, software engineer \n \nWant even more perspectives from previous attendees? Click here! \nSponsors \n
LOCATION:Room III - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:9d73ca36-045d-4ed8-bf71-ce3708b34d4d@conf.researchr.org
CREATED:20230916T214846Z
SUMMARY:REBLS: Technical session 2
DESCRIPTION:REBLS: Technical session 2\nSession Chair(s): Ragnar Mogk\n\nReactive programming and event-based programming are two closely related programming styles that are becoming ever more important with the advent of advanced HPC technology and the ever increasing requirement for our applications to run on the web or on collaborating mobile devices. A number of publications on middleware and language design — so-called reactive and event-based languages and systems (REBLS) — have already seen the light\, but the field still raises several questions. For example\, the interaction with mainstream language concepts is poorly understood\, implementation technology is in its infancy and modularity mechanisms are almost totally lacking. Moreover\, large applications are still to be developed and patterns and tools for developing reactive applications is an area that is vastly unexplored. \nThis workshop will gather researchers in reactive and event-based languages and systems. The goal of the workshop is to exchange new technical research results and to define better the field by coming up with taxonomies and overviews of the existing work.
LOCATION:Room IV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:72b8ae0d-7cfc-4be2-8493-f917d398802f@conf.researchr.org
CREATED:20230918T102746Z
SUMMARY:PAINT: PAINT 2023 - Session 3
DESCRIPTION:\n\n \nProgramming environments that integrate tools\, notations\, and abstractions into a holistic user experience can provide programmers with better support for what they want to achieve. These programming environments can create an engaging place to do new forms of informational work - resulting in enjoyable\, creative\, and productive experiences with programming. \nIn the workshop on Programming Abstractions and Interactive Notations\, Tools\, and Environments (PAINT)\, we want to discuss programming environments that support users in working with and creating notations and abstractions that matter to them. We are interested in the relationship between people centric notations and general-purpose programming languages and environments. How do we reflect the various experiences\, needs\, and priorities of the many people involved in programming — whether they call it that or not?
LOCATION:Room V - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:f2be7840-54e1-4c48-8f69-8d8bfea2209c@conf.researchr.org
CREATED:20230918T131006Z
SUMMARY:VMIL: Session #3
DESCRIPTION:VMIL: Session #3\nSession Chair(s): Tony Hosking\n\nThe concept of Virtual Machines is pervasive in the design and implementation of programming systems. Virtual Machines and the languages they implement are crucial in the specification\, implementation and/or user-facing deployment of most programming technologies. \nThe VMIL workshop is a forum for researchers and cutting-edge practitioners in language virtual machines\, the intermediate languages they use\, and related issues.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:5b7040d0-eac6-40cd-afd3-afa5b50eb06e@conf.researchr.org
CREATED:20231002T073905Z
SUMMARY:LOPSTR: Session II
DESCRIPTION:LOPSTR: Session II\nSession Chair(s): Michael Hanus\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:a9732a93-5a8f-4a55-a648-0ff11eb40812@conf.researchr.org
CREATED:20230921T105511Z
SUMMARY:LIVE: Document-orinted LIVE programming
DESCRIPTION:\n\nWhere UX meets PL \nProgramming is cognitively demanding\, and too difficult. LIVE is a workshop exploring new user interfaces that improve the immediacy\, usability\, and learnability of programming. Whereas PL research traditionally focuses on programs\, LIVE focuses more on the activity of programming. \n \nThemes \nProgrammers don’t materialize programs out of thin air\, but construct them out of existing programs. Embracing this insight leads to a different focus at LIVE compared to traditional PL workshops. Here are some of the qualities that we care about: \n \n Live. Live programming systems give the programmer immediate feedback on the output of a program as it is being edited\, replacing the edit-compile-debug cycle with a fluid programming experience. Liveness can also mean providing feedback about how the static meaning of the program is changing\, such as its type. \n Structured. A program is highly structured and meaningful to the programmer\, even in traditionally invalid states. “Structure-aware” programming environments understand and preserve that structure\, and allow operations at the level of the structure\, rather than at the level of raw text. \n Tangible. In the traditional view of programs\, execution takes place behind the scenes\, and leaves little record of what happened. We are interested in programming systems that make execution transparent\, tangible and explorable. \n Concrete. People find it easier to start with concrete examples and generalize afterwards. Programming tools tailored to people will support this mode of working. \n \nThe majority of LIVE submissions are demonstrations of novel programming systems. Technical papers\, insightful and clearly articulated experience reports\, theoretical papers that propose and verify generalized principles\, literature reviews\, and position papers are also welcome. \nOur goal is to provide a supportive venue where early-stage work receives constructive criticism. Whether graduate students or tenured faculty\, researchers need a forum to discuss new ideas and get helpful feedback from their peers. Towards that end\, we will allot about ten minutes for discussion after every presentation.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:87c39f69-fa5e-4c84-9d2b-f3c2722ab510@conf.researchr.org
CREATED:20230913T165236Z
SUMMARY:ST30 : ST30 Day 2 Session 3
DESCRIPTION:ST30 : ST30 Day 2 Session 3\nSession Chair(s): António Ravara\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T130000Z
DTEND:20231023T143000Z
DTSTAMP:20231021T100613Z
UID:4a9bebce-e141-499d-995c-a02cec570280@conf.researchr.org
CREATED:20230918T135542Z
SUMMARY:GPCE: Session 3
DESCRIPTION:\n\nACM SIGPLAN International Conference on Generative Programming: Concepts &amp\; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation\, domain-specific languages\, and component deployment to increase programmer productivity\, improve software quality\, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software\, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities. \nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis\, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations\, and corresponding Implementation Technologies aiming at modularity\, correctness\, reuse\, and evolution. As the field matures Applications and Empirical Results are of increasing importance. \nGPCE 2023 will be co-located with SPLASH\, SAS\, and SLE. The conference will be hosted in Lisbon\, Portugal. \nConference website: https://conf.researchr.org/home/gpce-2023 \nSubmission site: https://gpce23.hotcrp.com/ \nGPCE conference series: https://conf.researchr.org/series/gpce \ntwitter: https://twitter.com/gpceconf (@GPCECONF)
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:46c87246-4fdd-48e2-a19d-ebfa55c129ff@conf.researchr.org
CREATED:20230916T194832Z
SUMMARY:PPDP: Session 8
DESCRIPTION:PPDP: Session 8\nSession Chair(s): Santiago Escobar\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:6011a9ed-2854-461f-9268-2e4fc516479b@conf.researchr.org
CREATED:20230913T205759Z
SUMMARY:SAS : Session 8
DESCRIPTION:SAS : Session 8\nSession Chair(s): Xavier Rival\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:2aafaef7-6e31-4840-ae17-237eef20d7c6@conf.researchr.org
CREATED:20231003T154000Z
SUMMARY:SLE: Inference and automation
DESCRIPTION:SLE: Inference and automation\nSession Chair(s): Adrian Johnstone\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:2a9af7d3-1958-4e90-9ba3-3a780421b962@conf.researchr.org
CREATED:20230918T150347Z
SUMMARY:SPLASH PLMW: Wrap-up\, SIGPLAN-M Introduction\, Mentoring Sessions
DESCRIPTION:SPLASH PLMW: Wrap-up\, SIGPLAN-M Introduction\, Mentoring Sessions\nSession Chair(s): João F. Ferreira\, Molly Feldman\n\n \n We will only stream and record the first session of the workshop. \n Interested in helping mentor our students? Sign up here! \n \nThe SPLASH Programming Languages Mentoring Workshop encourages graduate students (PhD and MSc) and senior undergraduate students to pursue research in programming languages. This workshop will provide mentoring sessions on how to prepare for and thrive in graduate school and in a research career\, focusing both on cutting-edge research topics and practical advice. The workshop brings together leading researchers and junior students in an inclusive environment in order to help welcome newcomers to our field of programming languages research. The workshop will show students the many paths that they might take to enter and contribute to our research community. \nPLMW’s core mission is to foster the development of the next generation of researchers in our community. PLMW typically is a one-day (in-person) workshop with invited talks on research topics and practical advice\, with ad-hoc mentoring taking place throughout the day\, especially during breakfast\, lunch\, dinner and coffee breaks. PLMW@SPLASH mentoring will consist of a mix of small-group mentoring sessions\, where students can chat with mentors in small groups (organized by topics) and large-group “ask-me-anything” sessions. Topics covered will include: \n \n How to network effectively at a conference? How to find your cohort? How to find a mentor and what to look for? \n What communication skills are essential for a research career? To give a good presentation? A good poster session talk? To write an outstanding paper? \n How do people pick their research area of interest or your advisor/mentor? \n What are the new\, emerging areas in PL/SE? \n What are the differences between a research career in industry and in academia? \n What are the important work/life issues researchers deal with? \n How did PL/SE researchers successfully navigate their training experiences? \n \n \nStudents who are interested in attending the workshop and would like to request funding to do so must fill out a short application. The deadline has now passed. \n \nPLMW Perspectives \nCheck out our PLMW Video Perspectives below:  \n \n \n \n  \n  \n "PLMW changed my life and my career trajectory. I honestly applied to POPL on a whim one year because I was working a low-wage job in Los Angeles (where POPL was being held) and being a PhD student volunteer was the only way I could afford to attend. ACM conferences can be expensive. It was only after volunteering at that conference and talking to Ranjit Jhala that I had it in my head that I might pursue a PhD. But in what\, and how? And no one I work with has a PhD or gone to grad school for Computer Science\, much less PL. This is where PLMW came in. Almost immediately\, I met someone who had not only travelled a similar path\, but openly engaged with me\, and others who told me to follow up with them for help and mentorship applying to schools. Others I met even encouraged me to submit a paper or collaborate on a research paper with them. I had never written a single research paper before. I went from Pallet Jacks and helping 53 foot trucks back into a facility\, hearing the sound of welding and machining all day\, while sitting at a computer trying out small programmes in LISP\, to being a fully-funded PhD student within a year. I owe a lot of that to PLMW."  — Krystal Maughan\, PhD student\, University of Vermont \n \n \n \n  \n  \n "I went to my first PLMW in 2012\, which was at a time where I had not really thought much about applying for PhD programs. PLMW's program taught me tons of things about research that I did not know\, and was the first time I seriously considered an academic career. I still think back to some of the advice I got there whenever I write a paper or prepare a presentation. More importantly\, participating in PLMW meant I was also there for one of the main conferences on Programming Languages and thus got to see the world's experts in the field present and discuss their work. That was slightly scary\, but it turns out that people usually love it when somebody shares their interests. Lastly\, but possibly most importantly\, the people I met there for the first time became the friendly faces I already knew whenever I went to a conference afterward.”  — Fabian Muehlboeck\, post-doctoral researcher\, Institute of Science and Technology Austria  \n \n \n \n  \n  \n "I attended my first PLMW in 2017\, having previously taken one programming languages course. I definitely did not understand most of the technical talks given at PLMW\, and that's okay. My experience at PLMW greatly influenced my path since then. I got great advice for how to write papers and talks from Derek Dreyer's presentation\, which has helped me ever since. I also applied to graduate school with a special interest in compiler correctness because of Amal Ahmed's talk during this same PLMW. I am currently starting my second year of my PhD program researching type preserving compilation because of PLMW. I also made wonderful friends who I still keep in touch with. ”  — Paulette Koronkevich\, PhD student\, University of British Columbia \n \n \n  “Big PL conferences were very intimidating to me\, and PLMW takes the edge off that a lot. Having a community willing to teach you soft and technical skills is welcoming and helped me feel part of the fold. Besides that the lessons were very useful\, PLMW has been very influential in how I write papers.”  — Simon Cooksey\, post-doctoral researcher\, University of Kent \n \n \n "Coming from industry\, PLMW made the world of PL research feel much more accessible than it had prior to my attendance. Even though it was remote\, I felt I had the opportunity to engage with researchers and other prospective graduate students to get a sense of what PL research is like on a day-to-day basis. It also gave me perspective on the types of career tracks available after graduate school and how people find those opportunities. While I ended up choosing to stay in industry\, PLMW helped me feel comfortable with that decision while also having a better sense of how to bring academic ideas into industry. ”  — Rory Sawyer\, software engineer \n \nWant even more perspectives from previous attendees? Click here! \nSponsors \n
LOCATION:Room III - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:5ef9f680-0639-48c6-a9d8-18cf0d5b0229@conf.researchr.org
CREATED:20230918T131024Z
SUMMARY:VMIL: Session #4
DESCRIPTION:VMIL: Session #4\nSession Chair(s): Adam Welc\n\nThe concept of Virtual Machines is pervasive in the design and implementation of programming systems. Virtual Machines and the languages they implement are crucial in the specification\, implementation and/or user-facing deployment of most programming technologies. \nThe VMIL workshop is a forum for researchers and cutting-edge practitioners in language virtual machines\, the intermediate languages they use\, and related issues.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:043fda61-65ff-49f4-9247-d8eebd044e4e@conf.researchr.org
CREATED:20231002T074009Z
SUMMARY:LOPSTR: Session III
DESCRIPTION:LOPSTR: Session III\nSession Chair(s): Chantal Keller\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:e096d281-c23f-40fa-a6d5-86d2bbdd1f5b@conf.researchr.org
CREATED:20230921T105758Z
SUMMARY:LIVE: Remote talks / LIVE 2023 Closing
DESCRIPTION:\n\nWhere UX meets PL \nProgramming is cognitively demanding\, and too difficult. LIVE is a workshop exploring new user interfaces that improve the immediacy\, usability\, and learnability of programming. Whereas PL research traditionally focuses on programs\, LIVE focuses more on the activity of programming. \n \nThemes \nProgrammers don’t materialize programs out of thin air\, but construct them out of existing programs. Embracing this insight leads to a different focus at LIVE compared to traditional PL workshops. Here are some of the qualities that we care about: \n \n Live. Live programming systems give the programmer immediate feedback on the output of a program as it is being edited\, replacing the edit-compile-debug cycle with a fluid programming experience. Liveness can also mean providing feedback about how the static meaning of the program is changing\, such as its type. \n Structured. A program is highly structured and meaningful to the programmer\, even in traditionally invalid states. “Structure-aware” programming environments understand and preserve that structure\, and allow operations at the level of the structure\, rather than at the level of raw text. \n Tangible. In the traditional view of programs\, execution takes place behind the scenes\, and leaves little record of what happened. We are interested in programming systems that make execution transparent\, tangible and explorable. \n Concrete. People find it easier to start with concrete examples and generalize afterwards. Programming tools tailored to people will support this mode of working. \n \nThe majority of LIVE submissions are demonstrations of novel programming systems. Technical papers\, insightful and clearly articulated experience reports\, theoretical papers that propose and verify generalized principles\, literature reviews\, and position papers are also welcome. \nOur goal is to provide a supportive venue where early-stage work receives constructive criticism. Whether graduate students or tenured faculty\, researchers need a forum to discuss new ideas and get helpful feedback from their peers. Towards that end\, we will allot about ten minutes for discussion after every presentation.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:53f477d1-fe95-4584-9f94-d9e71164ebb1@conf.researchr.org
CREATED:20230913T165421Z
SUMMARY:ST30 : ST30 Day 2 Session 4 - Panel session
DESCRIPTION:ST30 : ST30 Day 2 Session 4 - Panel session\nSession Chair(s): Simon J. Gay\n\n22nd and 23rd October \nSession types are a type-theoretic approach to specifying communication protocols so that they can be verified by type-checking. This year marks 30 years since the first paper on session types\, by Kohei Honda at CONCUR 1993. Since then the topic has attracted increasing interest\, and a substantial community and literature have developed. Google Scholar lists almost 400 articles with “session types” in the title\, and most programming language conferences now include several papers on session types each year. In terms of the technical focus\, there have been continuing theoretical developments (notably the generalisation from two-party to multi-party session types by Honda\, Yoshida and Carbone in 2008\, and the development of a Curry-Howard correspondence with linear logic by Caires and Pfenning in 2010) and a variety of implementations of session types as programming language extensions or libraries\, covering (among others) Haskell\, OCaml\, Java\, Scala\, Rust\, Python\, C#\, Go. \nThis workshop will celebrate the 30th anniversary of session types by bringing together the community for two days of talks and technical discussion. The programme will include invited talks\, contributed talks\, and a panel session on future directions for session types. \nInvited speaker: Nobuko Yoshida\, University of Oxford\, UK \nTitle: Beyond Types for Dyadic Interaction \nAbstract: In this talk\, I give the origin and 30 years journey of session types using Kohei Honda’s slides on types for interactions. I then give a tribute to the Princess of Session Types. The talk also poses the question–why the session types are continuously studied and developed among other behavioural types.
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231023T150000Z
DTEND:20231023T163000Z
DTSTAMP:20231021T100613Z
UID:59a16783-7781-4748-9b74-b38c5e99c90e@conf.researchr.org
CREATED:20230918T135552Z
SUMMARY:GPCE: Session 4
DESCRIPTION:\n\nACM SIGPLAN International Conference on Generative Programming: Concepts &amp\; Experiences (GPCE) is a venue for researchers and practitioners interested in techniques that use program generation\, domain-specific languages\, and component deployment to increase programmer productivity\, improve software quality\, and shorten the time-to-market of software products. In addition to exploring cutting-edge techniques of generative software\, our goal is to foster further cross-fertilization between the software engineering and the programming languages research communities. \nGenerative and component approaches and domain-specific abstractions are revolutionizing software development just as automation and componentization revolutionized manufacturing. Raising the level of abstraction in software specification has been a fundamental goal of the computing community for several decades. Key technologies for automating program development and lifting the abstraction level closer to the problem domain are Generative Programming for program synthesis\, Domain-Specific Languages (DSLs) for compact problem-oriented programming notations\, and corresponding Implementation Technologies aiming at modularity\, correctness\, reuse\, and evolution. As the field matures Applications and Empirical Results are of increasing importance. \nGPCE 2023 will be co-located with SPLASH\, SAS\, and SLE. The conference will be hosted in Lisbon\, Portugal. \nConference website: https://conf.researchr.org/home/gpce-2023 \nSubmission site: https://gpce23.hotcrp.com/ \nGPCE conference series: https://conf.researchr.org/series/gpce \ntwitter: https://twitter.com/gpceconf (@GPCECONF)
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:fcb6bc40-bee7-4ff9-ae26-a5c5093f4237@conf.researchr.org
CREATED:20230919T123112Z
SUMMARY:CONFLANG: Configuration analysis
DESCRIPTION:\n\nCONFLANG is a workshop on the design\, the theory\, the practice and the future evolution of configuration languages. \nBuild systems\, package managers\, operating systems\, cloud infrastructures\, and web services are examples of modern complex software systems that require an extensive and non-trivial configuration in order to make them adapted to each different use-case. To manage the growing complexity that is then offloaded to configurations\, the declarative approach has become more and more popular\, illustrated for example by the infrastructure-as-code paradigm. This leads configuration to play an important role in critical aspects of software engineering\, including security\, availability\, and maintainability. \nHowever\, static text-based configuration alone is falling short of expressivity\, and is seldom sufficient. Data cannot be transformed\, combined nor shared\, resulting at best in boilerplate and duplication of information\, or at worst\, in data being invalid or inconsistent. Data validation isn’t supported either\, and must be handed over to yet another tool down the configuration pipeline\, if ever done. Correctly configuring a modern system is hard and failures may have substantial negative consequences. \nThese are the reasons why we witness the birth of a new generation of languages specialized in generating\, validating or enriching static configurations. Some of these languages take a holistic point of a view and provide programmable configurations. Others prefer to specialize in one aspect of configuration\, such as validation. These languages lie in a singular domain of the design space\, with specific constraints\, trade-offs and goals. Thus\, because configuration languages operate under very different design constraints than traditional programming languages\, because of their practical importance in software engineering and deployment\, and because of exciting new developments\, we think configuration languages are a worthy area of research. \nCONFLANG aims to gather this emerging community in order to engage in fruitful interactions\, to share ideas\, results\, opinions\, and experiences on languages for configuration. Correct configuration is an actual industrial problem\, and would greatly benefit from existing and ongoing academic research. Dually\, this is a space with new challenges to overcome and new directions to explore\, which is a great opportunity to confront new ideas with large-scale production.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:9a47a1a5-3d81-4c48-bb2f-153445af3b3c@conf.researchr.org
CREATED:20230913T205809Z
SUMMARY:SAS : Cost/precision trade-offs and acceleration
DESCRIPTION:SAS : Cost/precision trade-offs and acceleration\nSession Chair(s): José Morales\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:c2a6b5eb-eedd-49d8-93ad-7a61d933d93b@conf.researchr.org
CREATED:20231003T102211Z
SUMMARY:SLE: Live programming and debugging
DESCRIPTION:SLE: Live programming and debugging\nSession Chair(s): Thomas Degueule\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:b6409179-691b-45cd-b03e-90922c76c66d@conf.researchr.org
CREATED:20230905T031241Z
SUMMARY:PLF: Keynote
DESCRIPTION:PLF: Keynote\nSession Chair(s): Ragnar Mogk\n\nLanguages for Multi-Device Collaborative Applications \nDue to ubiquitous connectivity and cheap availability of user devices from smartphones to desktops\, applications supporting multi-device and collaborative use have become more common\, and with the Corona pandemic this trend has tremendously accelerated. \nWhile most of the distributed applications that we see nowadays are cloud-based\, avoiding the cloud can lead to privacy and performance benefits for users and operational and cost benefits for companies and developers. Following this idea\, Local-First Software runs and stores its data locally while still allowing collaboration\, thus retaining the benefits of existing collaborative applications without depending on the cloud. \nMany specific solutions already exist: operational transformation\, client-side databases with eventually consistent replication based on CRDTs\, and even synchronization as a service provided by commercial offerings\, and a vast selection of UI design libraries. \nHowever\, these solutions are not integrated with the programming languages that applications are developed in. Language based solutions related to distribution such as type systems describing protocols\, reliable actor runtimes\, data processing\, machine learning\, etc.\, are designed and optimized for the cloud not for a loosely connected set of cooperating devices. This workshop aims at bringing the issue to the attention of the PL community\, and accelerating the development of suitable solutions for this area.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:8605b4a6-ac3d-48de-bae0-09b5eaebff45@conf.researchr.org
CREATED:20231002T074138Z
SUMMARY:LOPSTR: Session IV
DESCRIPTION:LOPSTR: Session IV\nSession Chair(s): John P. Gallagher\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:5673c596-f6a3-4fa5-8240-43d62f096ed3@conf.researchr.org
CREATED:20230921T195905Z
SUMMARY:SPLASH Doctoral Symposium: Keynote and Elevator Pitches
DESCRIPTION:\n\nSPLASH Doctoral Symposium \nThe SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal\, but will not be defending their dissertation in the next 12 months. \nAre you at an earlier stage of your studies? Consider applying to the Programming Languages Mentoring Workshop! \nRelated Student Events at SPLASH \nParticipants to the Doctoral Symposium are highly encouraged to submit a poster to the SPLASH Poster session\, and to engage in the ACM Student Research Competition. These related events are opportunities for additional feedback and suggestions on their dissertation work\, contacts for further interaction\, and experience in communicating with other professionals. \nFunding \nThere is no explicit funding to attend the Doctoral Symposium. However\, participants in the Symposium will receive preferential consideration for Student Volunteer applications. Another potential source of funding is the SIGPLAN Professional Activities Committee. \nIn-Person Attendance \nThe Doctoral Symposium is primarily an in-person event. Special consideration may be given to participants who cannot physically attend the symposium. As part of the application process\, students will need to specify whether (and if\, why) they intend to participate remotely. \nMore Information \nFor additional information\, clarification\, or answers to questions please contact the Doctoral Symposium chair Michael Coblenz.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:4f5952ad-68ad-4e86-9a19-07f49e55d74b@conf.researchr.org
CREATED:20230915T214234Z
SUMMARY:IWACO: IWACO Keynote Session
DESCRIPTION:IWACO: IWACO Keynote Session\nSession Chair(s): Aleksander Boruch-Gruszecki\n\nStable object identity and shared mutable state are two powerful principles in programming. The ability to create multiple aliases to mutable data allows a direct modelling of sharing that occurs naturally in a domain\, and lies at the heart of efficient programming patterns where aliases provide shortcuts to key places in a data structure. However\, aliasing is also the cause of low-level bugs which are notoriously hard to debug\, where a change through one alias may cause unforeseen changes visible through another alias. These problems are particularly important in a concurrent setting\, where data races are caused by multiple threads sharing aliased references to mutable state. \nCoping with pointers\, aliasing and the proliferation of shared mutable state is a problem that crosscuts the software development stack\, from compilers and runtimes to bug-finding tools and end-user software. They complicate modular reasoning and program analysis\, efficient code generation\, efficient use of memory\, and obfuscate program logic. Furthermore\, in a setting where access to effects and resources is mediated with capabilities\, reasoning about capability aliasing is also reasoning about side effects and resource lifetimes\, providing a link to two other fundamental problems. \nMany techniques have been introduced to describe and reason about stateful programs\, and to restrict\, analyze\, and prevent aliases. These include various forms of ownership types\, capabilities\, separation logic\, linear logic\, uniqueness\, sharing control\, escape analysis\, argument independence\, read-only references\, linear references\, effect systems\, and access control mechanisms. These tools have found their way into type systems\, compilers and interpreters\, runtime systems and bug-finding tools. Their immediate practical relevance is self-evident from the popularity of Rust\, a programming language built around reasoning about aliasing and ownership to enable static memory management and data race freedom\, voted the “most beloved” in the annual Stack Overflow Developer Survey seven times in a row. \nIWACO’23 will focus on these techniques\, on how they can be used to reason about stateful (sequential or concurrent) programs\, and how they have been applied to programming languages. In particular\, we will consider papers on: \n \n models\, type systems and other formal systems\, programming language mechanisms\, analysis and design techniques\, patterns and notations for expressing ownership\, aliasing\, capabilities\, uniqueness\, and related topics\; \n empirical studies of programs or experience reports from programming systems designed with these techniques in mind\; \n programming logics that deal with aliasing and/or shared state\, or use ownership\, capabilities or resourcing\; \n applications of capabilities\, ownership and other similar type systems in low-level systems such as programming languages runtimes\, virtual machines\, or compilers\; and \n optimization techniques\, analysis algorithms\, libraries\, applications\, and novel approaches exploiting ownership\, aliasing\, capabilities\, uniqueness\, and related topics. \n
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T080000Z
DTEND:20231024T093000Z
DTSTAMP:20231021T100613Z
UID:aaf941a4-3bd7-479c-a42e-3817e7ce75aa@conf.researchr.org
CREATED:20230915T220755Z
SUMMARY:DLS: Looking Outward
DESCRIPTION:\n\n
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:b24a1e49-f677-444b-9b20-ba5126206699@conf.researchr.org
CREATED:20230919T122854Z
SUMMARY:CONFLANG: Empirical studies & experience reports
DESCRIPTION:\n\nCONFLANG is a workshop on the design\, the theory\, the practice and the future evolution of configuration languages. \nBuild systems\, package managers\, operating systems\, cloud infrastructures\, and web services are examples of modern complex software systems that require an extensive and non-trivial configuration in order to make them adapted to each different use-case. To manage the growing complexity that is then offloaded to configurations\, the declarative approach has become more and more popular\, illustrated for example by the infrastructure-as-code paradigm. This leads configuration to play an important role in critical aspects of software engineering\, including security\, availability\, and maintainability. \nHowever\, static text-based configuration alone is falling short of expressivity\, and is seldom sufficient. Data cannot be transformed\, combined nor shared\, resulting at best in boilerplate and duplication of information\, or at worst\, in data being invalid or inconsistent. Data validation isn’t supported either\, and must be handed over to yet another tool down the configuration pipeline\, if ever done. Correctly configuring a modern system is hard and failures may have substantial negative consequences. \nThese are the reasons why we witness the birth of a new generation of languages specialized in generating\, validating or enriching static configurations. Some of these languages take a holistic point of a view and provide programmable configurations. Others prefer to specialize in one aspect of configuration\, such as validation. These languages lie in a singular domain of the design space\, with specific constraints\, trade-offs and goals. Thus\, because configuration languages operate under very different design constraints than traditional programming languages\, because of their practical importance in software engineering and deployment\, and because of exciting new developments\, we think configuration languages are a worthy area of research. \nCONFLANG aims to gather this emerging community in order to engage in fruitful interactions\, to share ideas\, results\, opinions\, and experiences on languages for configuration. Correct configuration is an actual industrial problem\, and would greatly benefit from existing and ongoing academic research. Dually\, this is a space with new challenges to overcome and new directions to explore\, which is a great opportunity to confront new ideas with large-scale production.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:d95b3c7f-f862-4fa0-83e9-ee605c125884@conf.researchr.org
CREATED:20230913T204642Z
SUMMARY:SAS : Session 10
DESCRIPTION:SAS : Session 10\nSession Chair(s): Jerome Feret\n\n \n \n If you are a speaker\, please check the SPLASH instructions for presenters. \n Remember to register! \n The proceedings will be available on the first day of the conference. \n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:7b86237a-80f9-4677-9339-33edf881ce45@conf.researchr.org
CREATED:20231003T154852Z
SUMMARY:SLE: SLE Keynote
DESCRIPTION:SLE: SLE Keynote\nSession Chair(s): Elizabeth Scott\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:6ce64173-bd90-4d3e-add1-1dc2bef45831@conf.researchr.org
CREATED:20230914T161126Z
SUMMARY:PLF: PLF Talks 1
DESCRIPTION:\n\nLanguages for Multi-Device Collaborative Applications \nDue to ubiquitous connectivity and cheap availability of user devices from smartphones to desktops\, applications supporting multi-device and collaborative use have become more common\, and with the Corona pandemic this trend has tremendously accelerated. \nWhile most of the distributed applications that we see nowadays are cloud-based\, avoiding the cloud can lead to privacy and performance benefits for users and operational and cost benefits for companies and developers. Following this idea\, Local-First Software runs and stores its data locally while still allowing collaboration\, thus retaining the benefits of existing collaborative applications without depending on the cloud. \nMany specific solutions already exist: operational transformation\, client-side databases with eventually consistent replication based on CRDTs\, and even synchronization as a service provided by commercial offerings\, and a vast selection of UI design libraries. \nHowever\, these solutions are not integrated with the programming languages that applications are developed in. Language based solutions related to distribution such as type systems describing protocols\, reliable actor runtimes\, data processing\, machine learning\, etc.\, are designed and optimized for the cloud not for a loosely connected set of cooperating devices. This workshop aims at bringing the issue to the attention of the PL community\, and accelerating the development of suitable solutions for this area.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:4d78ab5f-7d00-4c27-a357-4fba14f7305e@conf.researchr.org
CREATED:20231002T074207Z
SUMMARY:LOPSTR: Session V
DESCRIPTION:LOPSTR: Session V\nSession Chair(s): Maurizio Proietti\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:829b5739-f820-415d-99da-32e386fb937b@conf.researchr.org
CREATED:20230921T201325Z
SUMMARY:SPLASH Doctoral Symposium: Machine Learning and Synthesis
DESCRIPTION:\n\nSPLASH Doctoral Symposium \nThe SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal\, but will not be defending their dissertation in the next 12 months. \nAre you at an earlier stage of your studies? Consider applying to the Programming Languages Mentoring Workshop! \nRelated Student Events at SPLASH \nParticipants to the Doctoral Symposium are highly encouraged to submit a poster to the SPLASH Poster session\, and to engage in the ACM Student Research Competition. These related events are opportunities for additional feedback and suggestions on their dissertation work\, contacts for further interaction\, and experience in communicating with other professionals. \nFunding \nThere is no explicit funding to attend the Doctoral Symposium. However\, participants in the Symposium will receive preferential consideration for Student Volunteer applications. Another potential source of funding is the SIGPLAN Professional Activities Committee. \nIn-Person Attendance \nThe Doctoral Symposium is primarily an in-person event. Special consideration may be given to participants who cannot physically attend the symposium. As part of the application process\, students will need to specify whether (and if\, why) they intend to participate remotely. \nMore Information \nFor additional information\, clarification\, or answers to questions please contact the Doctoral Symposium chair Michael Coblenz.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:f260a1c3-1aec-41e2-b441-224b6d6f92f4@conf.researchr.org
CREATED:20230915T213353Z
SUMMARY:IWACO: IWACO Session 1
DESCRIPTION:IWACO: IWACO Session 1\nSession Chair(s): Aleksander Boruch-Gruszecki\n\nStable object identity and shared mutable state are two powerful principles in programming. The ability to create multiple aliases to mutable data allows a direct modelling of sharing that occurs naturally in a domain\, and lies at the heart of efficient programming patterns where aliases provide shortcuts to key places in a data structure. However\, aliasing is also the cause of low-level bugs which are notoriously hard to debug\, where a change through one alias may cause unforeseen changes visible through another alias. These problems are particularly important in a concurrent setting\, where data races are caused by multiple threads sharing aliased references to mutable state. \nCoping with pointers\, aliasing and the proliferation of shared mutable state is a problem that crosscuts the software development stack\, from compilers and runtimes to bug-finding tools and end-user software. They complicate modular reasoning and program analysis\, efficient code generation\, efficient use of memory\, and obfuscate program logic. Furthermore\, in a setting where access to effects and resources is mediated with capabilities\, reasoning about capability aliasing is also reasoning about side effects and resource lifetimes\, providing a link to two other fundamental problems. \nMany techniques have been introduced to describe and reason about stateful programs\, and to restrict\, analyze\, and prevent aliases. These include various forms of ownership types\, capabilities\, separation logic\, linear logic\, uniqueness\, sharing control\, escape analysis\, argument independence\, read-only references\, linear references\, effect systems\, and access control mechanisms. These tools have found their way into type systems\, compilers and interpreters\, runtime systems and bug-finding tools. Their immediate practical relevance is self-evident from the popularity of Rust\, a programming language built around reasoning about aliasing and ownership to enable static memory management and data race freedom\, voted the “most beloved” in the annual Stack Overflow Developer Survey seven times in a row. \nIWACO’23 will focus on these techniques\, on how they can be used to reason about stateful (sequential or concurrent) programs\, and how they have been applied to programming languages. In particular\, we will consider papers on: \n \n models\, type systems and other formal systems\, programming language mechanisms\, analysis and design techniques\, patterns and notations for expressing ownership\, aliasing\, capabilities\, uniqueness\, and related topics\; \n empirical studies of programs or experience reports from programming systems designed with these techniques in mind\; \n programming logics that deal with aliasing and/or shared state\, or use ownership\, capabilities or resourcing\; \n applications of capabilities\, ownership and other similar type systems in low-level systems such as programming languages runtimes\, virtual machines\, or compilers\; and \n optimization techniques\, analysis algorithms\, libraries\, applications\, and novel approaches exploiting ownership\, aliasing\, capabilities\, uniqueness\, and related topics. \n
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T100000Z
DTEND:20231024T113000Z
DTSTAMP:20231021T100613Z
UID:39499940-3beb-4665-a71d-4e721d716cfa@conf.researchr.org
CREATED:20230915T220847Z
SUMMARY:DLS: Looking Inward
DESCRIPTION:\n\n
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T130000Z
DTEND:20231024T143000Z
DTSTAMP:20231021T100613Z
UID:fdb1fc2e-3b92-44ac-ab8f-53eeed1f3ccb@conf.researchr.org
CREATED:20230919T122932Z
SUMMARY:CONFLANG: Configuration languages
DESCRIPTION:\n\nCONFLANG is a workshop on the design\, the theory\, the practice and the future evolution of configuration languages. \nBuild systems\, package managers\, operating systems\, cloud infrastructures\, and web services are examples of modern complex software systems that require an extensive and non-trivial configuration in order to make them adapted to each different use-case. To manage the growing complexity that is then offloaded to configurations\, the declarative approach has become more and more popular\, illustrated for example by the infrastructure-as-code paradigm. This leads configuration to play an important role in critical aspects of software engineering\, including security\, availability\, and maintainability. \nHowever\, static text-based configuration alone is falling short of expressivity\, and is seldom sufficient. Data cannot be transformed\, combined nor shared\, resulting at best in boilerplate and duplication of information\, or at worst\, in data being invalid or inconsistent. Data validation isn’t supported either\, and must be handed over to yet another tool down the configuration pipeline\, if ever done. Correctly configuring a modern system is hard and failures may have substantial negative consequences. \nThese are the reasons why we witness the birth of a new generation of languages specialized in generating\, validating or enriching static configurations. Some of these languages take a holistic point of a view and provide programmable configurations. Others prefer to specialize in one aspect of configuration\, such as validation. These languages lie in a singular domain of the design space\, with specific constraints\, trade-offs and goals. Thus\, because configuration languages operate under very different design constraints than traditional programming languages\, because of their practical importance in software engineering and deployment\, and because of exciting new developments\, we think configuration languages are a worthy area of research. \nCONFLANG aims to gather this emerging community in order to engage in fruitful interactions\, to share ideas\, results\, opinions\, and experiences on languages for configuration. Correct configuration is an actual industrial problem\, and would greatly benefit from existing and ongoing academic research. Dually\, this is a space with new challenges to overcome and new directions to explore\, which is a great opportunity to confront new ideas with large-scale production.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T130000Z
DTEND:20231024T143000Z
DTSTAMP:20231021T100613Z
UID:6ead69e0-2f06-43ff-8f51-89c7eb3128d7@conf.researchr.org
CREATED:20231003T102401Z
SUMMARY:SLE: Modeling
DESCRIPTION:SLE: Modeling\nSession Chair(s): Benoit Combemale\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T130000Z
DTEND:20231024T143000Z
DTSTAMP:20231021T100613Z
UID:2900c825-0e01-4d10-aae4-4db72d342d0a@conf.researchr.org
CREATED:20230914T161134Z
SUMMARY:PLF: PLF Talks 2
DESCRIPTION:\n\nLanguages for Multi-Device Collaborative Applications \nDue to ubiquitous connectivity and cheap availability of user devices from smartphones to desktops\, applications supporting multi-device and collaborative use have become more common\, and with the Corona pandemic this trend has tremendously accelerated. \nWhile most of the distributed applications that we see nowadays are cloud-based\, avoiding the cloud can lead to privacy and performance benefits for users and operational and cost benefits for companies and developers. Following this idea\, Local-First Software runs and stores its data locally while still allowing collaboration\, thus retaining the benefits of existing collaborative applications without depending on the cloud. \nMany specific solutions already exist: operational transformation\, client-side databases with eventually consistent replication based on CRDTs\, and even synchronization as a service provided by commercial offerings\, and a vast selection of UI design libraries. \nHowever\, these solutions are not integrated with the programming languages that applications are developed in. Language based solutions related to distribution such as type systems describing protocols\, reliable actor runtimes\, data processing\, machine learning\, etc.\, are designed and optimized for the cloud not for a loosely connected set of cooperating devices. This workshop aims at bringing the issue to the attention of the PL community\, and accelerating the development of suitable solutions for this area.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T130000Z
DTEND:20231024T143000Z
DTSTAMP:20231021T100613Z
UID:d202778e-6a69-45e8-abb1-b566481306c4@conf.researchr.org
CREATED:20231002T074242Z
SUMMARY:LOPSTR: Session VI
DESCRIPTION:LOPSTR: Session VI\nSession Chair(s): Juliana Bowles\n\nThis page will soon grow in content and contain information about the scope of this research track.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T130000Z
DTEND:20231024T143000Z
DTSTAMP:20231021T100613Z
UID:326f7a63-9279-40a4-9f34-f5ecf70a0dc8@conf.researchr.org
CREATED:20230921T201516Z
SUMMARY:SPLASH Doctoral Symposium: Compilation and Analysis
DESCRIPTION:\n\nSPLASH Doctoral Symposium \nThe SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal\, but will not be defending their dissertation in the next 12 months. \nAre you at an earlier stage of your studies? Consider applying to the Programming Languages Mentoring Workshop! \nRelated Student Events at SPLASH \nParticipants to the Doctoral Symposium are highly encouraged to submit a poster to the SPLASH Poster session\, and to engage in the ACM Student Research Competition. These related events are opportunities for additional feedback and suggestions on their dissertation work\, contacts for further interaction\, and experience in communicating with other professionals. \nFunding \nThere is no explicit funding to attend the Doctoral Symposium. However\, participants in the Symposium will receive preferential consideration for Student Volunteer applications. Another potential source of funding is the SIGPLAN Professional Activities Committee. \nIn-Person Attendance \nThe Doctoral Symposium is primarily an in-person event. Special consideration may be given to participants who cannot physically attend the symposium. As part of the application process\, students will need to specify whether (and if\, why) they intend to participate remotely. \nMore Information \nFor additional information\, clarification\, or answers to questions please contact the Doctoral Symposium chair Michael Coblenz.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T130000Z
DTEND:20231024T143000Z
DTSTAMP:20231021T100613Z
UID:944f812d-fa4d-4158-9fff-ca446a50f0b7@conf.researchr.org
CREATED:20230915T213421Z
SUMMARY:IWACO: IWACO Session 2
DESCRIPTION:IWACO: IWACO Session 2\nSession Chair(s): Aleksander Boruch-Gruszecki\n\nStable object identity and shared mutable state are two powerful principles in programming. The ability to create multiple aliases to mutable data allows a direct modelling of sharing that occurs naturally in a domain\, and lies at the heart of efficient programming patterns where aliases provide shortcuts to key places in a data structure. However\, aliasing is also the cause of low-level bugs which are notoriously hard to debug\, where a change through one alias may cause unforeseen changes visible through another alias. These problems are particularly important in a concurrent setting\, where data races are caused by multiple threads sharing aliased references to mutable state. \nCoping with pointers\, aliasing and the proliferation of shared mutable state is a problem that crosscuts the software development stack\, from compilers and runtimes to bug-finding tools and end-user software. They complicate modular reasoning and program analysis\, efficient code generation\, efficient use of memory\, and obfuscate program logic. Furthermore\, in a setting where access to effects and resources is mediated with capabilities\, reasoning about capability aliasing is also reasoning about side effects and resource lifetimes\, providing a link to two other fundamental problems. \nMany techniques have been introduced to describe and reason about stateful programs\, and to restrict\, analyze\, and prevent aliases. These include various forms of ownership types\, capabilities\, separation logic\, linear logic\, uniqueness\, sharing control\, escape analysis\, argument independence\, read-only references\, linear references\, effect systems\, and access control mechanisms. These tools have found their way into type systems\, compilers and interpreters\, runtime systems and bug-finding tools. Their immediate practical relevance is self-evident from the popularity of Rust\, a programming language built around reasoning about aliasing and ownership to enable static memory management and data race freedom\, voted the “most beloved” in the annual Stack Overflow Developer Survey seven times in a row. \nIWACO’23 will focus on these techniques\, on how they can be used to reason about stateful (sequential or concurrent) programs\, and how they have been applied to programming languages. In particular\, we will consider papers on: \n \n models\, type systems and other formal systems\, programming language mechanisms\, analysis and design techniques\, patterns and notations for expressing ownership\, aliasing\, capabilities\, uniqueness\, and related topics\; \n empirical studies of programs or experience reports from programming systems designed with these techniques in mind\; \n programming logics that deal with aliasing and/or shared state\, or use ownership\, capabilities or resourcing\; \n applications of capabilities\, ownership and other similar type systems in low-level systems such as programming languages runtimes\, virtual machines\, or compilers\; and \n optimization techniques\, analysis algorithms\, libraries\, applications\, and novel approaches exploiting ownership\, aliasing\, capabilities\, uniqueness\, and related topics. \n
LOCATION:Room XIII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T130000Z
DTEND:20231024T143000Z
DTSTAMP:20231021T100613Z
UID:f656345c-8a49-4d1a-8089-acf605130315@conf.researchr.org
CREATED:20230915T220952Z
SUMMARY:DLS: The Future of Runtimes
DESCRIPTION:\n\n
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T150000Z
DTEND:20231024T163000Z
DTSTAMP:20231021T100613Z
UID:b2f9bfce-52e7-4f61-a5da-7160f39bb2d3@conf.researchr.org
CREATED:20230919T122744Z
SUMMARY:CONFLANG: Configuration testing
DESCRIPTION:\n\nCONFLANG is a workshop on the design\, the theory\, the practice and the future evolution of configuration languages. \nBuild systems\, package managers\, operating systems\, cloud infrastructures\, and web services are examples of modern complex software systems that require an extensive and non-trivial configuration in order to make them adapted to each different use-case. To manage the growing complexity that is then offloaded to configurations\, the declarative approach has become more and more popular\, illustrated for example by the infrastructure-as-code paradigm. This leads configuration to play an important role in critical aspects of software engineering\, including security\, availability\, and maintainability. \nHowever\, static text-based configuration alone is falling short of expressivity\, and is seldom sufficient. Data cannot be transformed\, combined nor shared\, resulting at best in boilerplate and duplication of information\, or at worst\, in data being invalid or inconsistent. Data validation isn’t supported either\, and must be handed over to yet another tool down the configuration pipeline\, if ever done. Correctly configuring a modern system is hard and failures may have substantial negative consequences. \nThese are the reasons why we witness the birth of a new generation of languages specialized in generating\, validating or enriching static configurations. Some of these languages take a holistic point of a view and provide programmable configurations. Others prefer to specialize in one aspect of configuration\, such as validation. These languages lie in a singular domain of the design space\, with specific constraints\, trade-offs and goals. Thus\, because configuration languages operate under very different design constraints than traditional programming languages\, because of their practical importance in software engineering and deployment\, and because of exciting new developments\, we think configuration languages are a worthy area of research. \nCONFLANG aims to gather this emerging community in order to engage in fruitful interactions\, to share ideas\, results\, opinions\, and experiences on languages for configuration. Correct configuration is an actual industrial problem\, and would greatly benefit from existing and ongoing academic research. Dually\, this is a space with new challenges to overcome and new directions to explore\, which is a great opportunity to confront new ideas with large-scale production.
LOCATION:Oceanus - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T150000Z
DTEND:20231024T163000Z
DTSTAMP:20231021T100613Z
UID:6d763970-02b5-44d0-b24e-39d398ca1fc8@conf.researchr.org
CREATED:20231003T102511Z
SUMMARY:SLE: Tools and Demonstrations
DESCRIPTION:SLE: Tools and Demonstrations\nSession Chair(s): João Saraiva\n\nThe ACM SIGPLAN International Conference on Software Language Engineering (SLE) is devoted to the principles of software languages: their design\, their implementation\, and their evolution. \nWith the ubiquity of computers\, software has become the dominating intellectual asset of our time. In turn\, this software depends on software languages\, namely the languages it is written in\, the languages used to describe its environment\, and the languages driving its development process. Given that everything depends on software and that software depends on software languages\, it seems fair to say that for many years to come\, everything will depend on software languages. \nSoftware language engineering (SLE) is the discipline of engineering languages and their tools required for the creation of software. It abstracts from the differences between programming languages\, modelling languages\, and other software languages\, and emphasizes the engineering facet of the creation of such languages\, that is\, the establishment of the scientific methods and practices that enable the best results. While SLE is certainly driven by its metacircular character (software languages are engineered using software languages)\, SLE is not self-satisfying: its scope extends to the engineering of languages for all and everything. \nLike its predecessors\, the 16th edition of the SLE conference\, SLE 2023\, will bring together researchers from different areas united by their common interest in the creation\, capture\, and tooling of software languages. It overlaps with traditional conferences on the design and implementation of programming languages\, model-driven engineering\, and compiler construction\, and emphasizes the fusion of their communities. To foster the latter\, SLE traditionally fills a two-day program with a single track\, with the only temporal overlap occurring between co-located events. \nSLE 2023 will be co-located with SPLASH 2023 and take place in Cascais\, Lisbon\, Portugal. \n \n Community website: http://www.sleconf.org/2023 \n Conference website: https://conf.researchr.org/home/sle-2023 \n Submission website: https://sle23.hotcrp.com \n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T150000Z
DTEND:20231024T163000Z
DTSTAMP:20231021T100613Z
UID:314b7601-5d6c-4082-ad4c-00848baf46a0@conf.researchr.org
CREATED:20230914T161141Z
SUMMARY:PLF: PLF Short Talks
DESCRIPTION:\n\nLanguages for Multi-Device Collaborative Applications \nDue to ubiquitous connectivity and cheap availability of user devices from smartphones to desktops\, applications supporting multi-device and collaborative use have become more common\, and with the Corona pandemic this trend has tremendously accelerated. \nWhile most of the distributed applications that we see nowadays are cloud-based\, avoiding the cloud can lead to privacy and performance benefits for users and operational and cost benefits for companies and developers. Following this idea\, Local-First Software runs and stores its data locally while still allowing collaboration\, thus retaining the benefits of existing collaborative applications without depending on the cloud. \nMany specific solutions already exist: operational transformation\, client-side databases with eventually consistent replication based on CRDTs\, and even synchronization as a service provided by commercial offerings\, and a vast selection of UI design libraries. \nHowever\, these solutions are not integrated with the programming languages that applications are developed in. Language based solutions related to distribution such as type systems describing protocols\, reliable actor runtimes\, data processing\, machine learning\, etc.\, are designed and optimized for the cloud not for a loosely connected set of cooperating devices. This workshop aims at bringing the issue to the attention of the PL community\, and accelerating the development of suitable solutions for this area.
LOCATION:Room VI - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T150000Z
DTEND:20231024T163000Z
DTSTAMP:20231021T100613Z
UID:22168c35-39f4-4d86-9f10-0ad70b0680bc@conf.researchr.org
CREATED:20230921T201528Z
SUMMARY:SPLASH Doctoral Symposium: Syntax and Discussion
DESCRIPTION:\n\nSPLASH Doctoral Symposium \nThe SPLASH Doctoral Symposium provides students with useful guidance for completing their dissertation research and beginning their research careers. The symposium will provide an interactive forum for doctoral students who have progressed far enough in their research to have a structured proposal\, but will not be defending their dissertation in the next 12 months. \nAre you at an earlier stage of your studies? Consider applying to the Programming Languages Mentoring Workshop! \nRelated Student Events at SPLASH \nParticipants to the Doctoral Symposium are highly encouraged to submit a poster to the SPLASH Poster session\, and to engage in the ACM Student Research Competition. These related events are opportunities for additional feedback and suggestions on their dissertation work\, contacts for further interaction\, and experience in communicating with other professionals. \nFunding \nThere is no explicit funding to attend the Doctoral Symposium. However\, participants in the Symposium will receive preferential consideration for Student Volunteer applications. Another potential source of funding is the SIGPLAN Professional Activities Committee. \nIn-Person Attendance \nThe Doctoral Symposium is primarily an in-person event. Special consideration may be given to participants who cannot physically attend the symposium. As part of the application process\, students will need to specify whether (and if\, why) they intend to participate remotely. \nMore Information \nFor additional information\, clarification\, or answers to questions please contact the Doctoral Symposium chair Michael Coblenz.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T150000Z
DTEND:20231024T163000Z
DTSTAMP:20231021T100613Z
UID:c1f623c8-0b1e-4698-b235-5b5098ead1a2@conf.researchr.org
CREATED:20230915T221040Z
SUMMARY:DLS: Beyond the Language
DESCRIPTION:\n\n
LOCATION:Room XV - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231024T163000Z
DTEND:20231024T183000Z
DTSTAMP:20231021T100613Z
UID:13ad0598-c080-4210-9220-1848697bb83b@conf.researchr.org
CREATED:20231017T082104Z
SUMMARY:SPLASH Posters: SPLASH Posters
DESCRIPTION:\n\nThe SPLASH Posters track provides an excellent forum for authors to present their recent or ongoing projects in an interactive setting\, and receive feedback from the community. We invite submissions covering any aspect of programming\, systems\, languages and applications. The goal of the poster session is to encourage and facilitate small groups of individuals interested in a technical area to gather and interact. It is held early in the conference\, to promote continued discussion among interested parties. \nPoster Presentation Logistics \nThere will be two sessions for poster presentations: Sunday evening\, 5:30 PM - 7:30 PM\, Oct 22\, 2023\, and Tuesday evening\, 5:30 PM - 7:30 PM\, Oct 24\, 2023 . The first session is reserved for posters from the SPLASH 2023 Posters Track\, while the second session is reserved for posters from the Student Research Competition\, OOPSLA/Onward! papers/essays. Authors are encouraged to present their work in both sessions (if space permits\, which is very likely). \nSize of the poster board: 135 cm (height) x 90 cm (width). The recommended poster sizes are A0 (portrait) or A1 (landscape).
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T080000Z
DTEND:20231025T083000Z
DTSTAMP:20231021T100613Z
UID:e849aff0-b9ce-4bc0-95f5-8fa89f51663b@conf.researchr.org
CREATED:20231011T194605Z
SUMMARY:SPLASH OOPSLA: Opening and Welcome
DESCRIPTION:\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T080000Z
DTEND:20231025T093000Z
DTSTAMP:20231021T100613Z
UID:2075487d-9ded-4773-8120-145fb77b2262@conf.researchr.org
CREATED:20230922T141258Z
SUMMARY:SPLASH Onward! Papers: Keynote
DESCRIPTION:SPLASH Onward! Papers: Keynote\nSession Chair(s): Tijs van der Storm\n\nOnward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes\, methods\, languages\, communities and applications. Onward! is more radical\, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about\, approaching and reporting on programming language and software engineering research. \nThe Character of Onward! \nOnward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments\, which are necessary for scientific progress\, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However\, Onward! accepts less rigorous methods of validation such as compelling arguments\, exploratory implementations\, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T083000Z
DTEND:20231025T093000Z
DTSTAMP:20231021T100613Z
UID:d0438909-195d-4678-a9f6-525dc84bd222@conf.researchr.org
CREATED:20230912T183222Z
SUMMARY:SPLASH OOPSLA: Keynote 1
DESCRIPTION:\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T100000Z
DTEND:20231025T113000Z
DTSTAMP:20231021T100613Z
UID:cf53d257-b917-407f-be3a-7d0383c9b66a@conf.researchr.org
CREATED:20230912T141907Z
SUMMARY:SPLASH OOPSLA: AI4SE
DESCRIPTION:SPLASH OOPSLA: AI4SE\nSession Chair(s): Guido Salvaneschi\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T100000Z
DTEND:20231025T113000Z
DTSTAMP:20231021T100613Z
UID:64496222-c492-4335-b56d-7cdb0a395a66@conf.researchr.org
CREATED:20230912T144305Z
SUMMARY:SPLASH OOPSLA: program synthesis 1
DESCRIPTION:SPLASH OOPSLA: program synthesis 1\nSession Chair(s): Michael Coblenz\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T100000Z
DTEND:20231025T113000Z
DTSTAMP:20231021T100613Z
UID:705bdb2d-fae9-45f3-9ac2-8a9ae71db0bb@conf.researchr.org
CREATED:20230907T154434Z
SUMMARY:SPLASH Onward! Papers: Beyond Text? 
DESCRIPTION:SPLASH Onward! Papers: Beyond Text? \nSession Chair(s): L. Thomas van Binsbergen\n\nOnward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes\, methods\, languages\, communities and applications. Onward! is more radical\, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about\, approaching and reporting on programming language and software engineering research. \nThe Character of Onward! \nOnward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments\, which are necessary for scientific progress\, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However\, Onward! accepts less rigorous methods of validation such as compelling arguments\, exploratory implementations\, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T100000Z
DTEND:20231025T113000Z
DTSTAMP:20231021T100613Z
UID:cf1ba7f1-363b-4736-8510-349b3ffd6508@conf.researchr.org
CREATED:20230918T204326Z
SUMMARY:SPLASH -E: Papers & Group Discussion
DESCRIPTION:SPLASH -E: Papers & Group Discussion\nSession Chair(s): Cyrus Omar\n\nSPLASH-E is a symposium\, started in 2013\, for software and languages (SE/PL) researchers with activities and interests around computing education. Some build pedagogically-oriented languages or tools\; some think about pedagogic challenges around SE/PL courses\; some bring computing to non-CS communities\; some pursue human studies and educational research. \nAt SPLASH-E\, we share our educational ideas and challenges centered in software/languages\, as well as our best ideas for advancing such work. SPLASH-E strives to bring together researchers and those with educational interests that arise from software ideas or concerns.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T130000Z
DTEND:20231025T143000Z
DTSTAMP:20231021T100613Z
UID:179dde1e-1ef1-4e49-a61f-a0cc4973a478@conf.researchr.org
CREATED:20230912T144658Z
SUMMARY:SPLASH OOPSLA: SE4AI
DESCRIPTION:SPLASH OOPSLA: SE4AI\nSession Chair(s): Arjun Guha\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T130000Z
DTEND:20231025T143000Z
DTSTAMP:20231021T100613Z
UID:58304eed-8261-431e-977f-f6896b4f8a60@conf.researchr.org
CREATED:20230912T144440Z
SUMMARY:SPLASH OOPSLA: program synthesis 2
DESCRIPTION:SPLASH OOPSLA: program synthesis 2\nSession Chair(s): Chandrakana Nandi\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T130000Z
DTEND:20231025T143000Z
DTSTAMP:20231021T100613Z
UID:51ff2082-9bb4-4892-a466-5d2f7694cff8@conf.researchr.org
CREATED:20230907T154554Z
SUMMARY:SPLASH Onward! Papers: Beyond Language?
DESCRIPTION:SPLASH Onward! Papers: Beyond Language?\nSession Chair(s): Alex Potanin\n\nOnward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes\, methods\, languages\, communities and applications. Onward! is more radical\, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about\, approaching and reporting on programming language and software engineering research. \nThe Character of Onward! \nOnward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments\, which are necessary for scientific progress\, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However\, Onward! accepts less rigorous methods of validation such as compelling arguments\, exploratory implementations\, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T130000Z
DTEND:20231025T143000Z
DTSTAMP:20231021T100613Z
UID:d696b782-0ef3-43aa-909b-8d499302e38e@conf.researchr.org
CREATED:20230918T204337Z
SUMMARY:SPLASH -E: Introductions & Papers
DESCRIPTION:SPLASH -E: Introductions & Papers\nSession Chair(s): Luca Chiodini\n\nSPLASH-E is a symposium\, started in 2013\, for software and languages (SE/PL) researchers with activities and interests around computing education. Some build pedagogically-oriented languages or tools\; some think about pedagogic challenges around SE/PL courses\; some bring computing to non-CS communities\; some pursue human studies and educational research. \nAt SPLASH-E\, we share our educational ideas and challenges centered in software/languages\, as well as our best ideas for advancing such work. SPLASH-E strives to bring together researchers and those with educational interests that arise from software ideas or concerns.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T150000Z
DTEND:20231025T163000Z
DTSTAMP:20231021T100613Z
UID:93b65b0a-342a-4191-8aad-773f840d0989@conf.researchr.org
CREATED:20230912T143744Z
SUMMARY:SPLASH OOPSLA: probabilistic
DESCRIPTION:SPLASH OOPSLA: probabilistic\nSession Chair(s): Chandrakana Nandi\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T150000Z
DTEND:20231025T164800Z
DTSTAMP:20231021T100613Z
UID:b0ac23b7-ddc1-43be-851a-aa99232bcf93@conf.researchr.org
CREATED:20230912T142933Z
SUMMARY:SPLASH OOPSLA: DSLs
DESCRIPTION:SPLASH OOPSLA: DSLs\nSession Chair(s): Ben Greenman\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T150000Z
DTEND:20231025T163000Z
DTSTAMP:20231021T100613Z
UID:a11f384a-44ac-40ed-b47b-15ddd1549eab@conf.researchr.org
CREATED:20230907T154613Z
SUMMARY:SPLASH Onward! Papers: Essays 1
DESCRIPTION:SPLASH Onward! Papers: Essays 1\nSession Chair(s): Matthew Dinmore\n\nOnward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes\, methods\, languages\, communities and applications. Onward! is more radical\, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about\, approaching and reporting on programming language and software engineering research. \nThe Character of Onward! \nOnward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments\, which are necessary for scientific progress\, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However\, Onward! accepts less rigorous methods of validation such as compelling arguments\, exploratory implementations\, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T150000Z
DTEND:20231025T163000Z
DTSTAMP:20231021T100613Z
UID:2e3d6230-73d2-470e-adb4-f529a3ecd94a@conf.researchr.org
CREATED:20230918T204356Z
SUMMARY:SPLASH -E: Papers & Future Discussion
DESCRIPTION:SPLASH -E: Papers & Future Discussion\nSession Chair(s): Molly Feldman\n\nSPLASH-E is a symposium\, started in 2013\, for software and languages (SE/PL) researchers with activities and interests around computing education. Some build pedagogically-oriented languages or tools\; some think about pedagogic challenges around SE/PL courses\; some bring computing to non-CS communities\; some pursue human studies and educational research. \nAt SPLASH-E\, we share our educational ideas and challenges centered in software/languages\, as well as our best ideas for advancing such work. SPLASH-E strives to bring together researchers and those with educational interests that arise from software ideas or concerns.
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231025T164500Z
DTEND:20231025T183000Z
DTSTAMP:20231021T100613Z
UID:87629faa-7394-4fba-aa7d-a8de915e2227@conf.researchr.org
CREATED:20231012T051913Z
SUMMARY:SPLASH Catering: Reception
DESCRIPTION:\n\nLunch\, Dinner\, Coffee-breaks
LOCATION:Gallery - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T083000Z
DTEND:20231026T093000Z
DTSTAMP:20231021T100613Z
UID:5f6204b9-6f4a-4e00-8cf1-e42d8fbece2a@conf.researchr.org
CREATED:20230912T183240Z
SUMMARY:SPLASH OOPSLA: Keynote 2
DESCRIPTION:\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T100000Z
DTEND:20231026T113000Z
DTSTAMP:20231021T100613Z
UID:5594c66f-186d-40fe-8da1-95d312d4619d@conf.researchr.org
CREATED:20230912T145859Z
SUMMARY:SPLASH OOPSLA: type systems 1
DESCRIPTION:SPLASH OOPSLA: type systems 1\nSession Chair(s): Max S. New\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T100000Z
DTEND:20231026T113000Z
DTSTAMP:20231021T100613Z
UID:466c6359-63c1-4baa-895c-33dc51c9972f@conf.researchr.org
CREATED:20230912T143634Z
SUMMARY:SPLASH OOPSLA: language semantics
DESCRIPTION:SPLASH OOPSLA: language semantics\nSession Chair(s): Sebastian Erdweg\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T100000Z
DTEND:20231026T113000Z
DTSTAMP:20231021T100613Z
UID:450eda9c-a5dc-4f26-ad87-a8071ab61d34@conf.researchr.org
CREATED:20230907T154514Z
SUMMARY:SPLASH Onward! Papers: Beyond Programming? 
DESCRIPTION:SPLASH Onward! Papers: Beyond Programming? \nSession Chair(s): Riemer van Rozen\n\nOnward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes\, methods\, languages\, communities and applications. Onward! is more radical\, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about\, approaching and reporting on programming language and software engineering research. \nThe Character of Onward! \nOnward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments\, which are necessary for scientific progress\, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However\, Onward! accepts less rigorous methods of validation such as compelling arguments\, exploratory implementations\, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T130000Z
DTEND:20231026T143000Z
DTSTAMP:20231021T100613Z
UID:895869f3-44c5-485b-b6ca-fa28552f4f92@conf.researchr.org
CREATED:20230912T145936Z
SUMMARY:SPLASH OOPSLA: type systems 2
DESCRIPTION:SPLASH OOPSLA: type systems 2\nSession Chair(s): Max S. New\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T130000Z
DTEND:20231026T143000Z
DTSTAMP:20231021T100613Z
UID:e13566ab-783d-48af-9ac0-fa879d95ef41@conf.researchr.org
CREATED:20230912T143850Z
SUMMARY:SPLASH OOPSLA: program analysis 1
DESCRIPTION:SPLASH OOPSLA: program analysis 1\nSession Chair(s): Manu Sridharan\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T130000Z
DTEND:20231026T143000Z
DTSTAMP:20231021T100613Z
UID:9dcb8020-3390-448d-b74b-bd898b26ebbc@conf.researchr.org
CREATED:20230907T154713Z
SUMMARY:SPLASH Onward! Papers: Essays 2
DESCRIPTION:SPLASH Onward! Papers: Essays 2\nSession Chair(s): James Noble\n\nOnward! is a premier multidisciplinary conference focused on everything to do with programming and software: including processes\, methods\, languages\, communities and applications. Onward! is more radical\, more visionary and more open than other conferences to ideas that are well-argued but not yet proven. We welcome different ways of thinking about\, approaching and reporting on programming language and software engineering research. \nThe Character of Onward! \nOnward! Papers is looking for grand visions and new paradigms that could make a big difference in how we will one day build software. But it is not looking for research-as-usual papers—conferences like OOPSLA are the place for that. Those conferences require rigorous validation such as theorems or empirical experiments\, which are necessary for scientific progress\, but which typically preclude discussion of early-stage ideas. Onward! papers must also supply some degree of validation because mere speculation is not a good basis for progress. However\, Onward! accepts less rigorous methods of validation such as compelling arguments\, exploratory implementations\, and substantial examples. The use of worked-out examples to support new ideas is strongly encouraged.
LOCATION:Room VII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T150000Z
DTEND:20231026T163000Z
DTSTAMP:20231021T100613Z
UID:a412f1f9-fab2-4807-a7e5-c2118fc04b6a@conf.researchr.org
CREATED:20230912T143001Z
SUMMARY:SPLASH OOPSLA: effect systems
DESCRIPTION:SPLASH OOPSLA: effect systems\nSession Chair(s): Sebastian Erdweg\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T150000Z
DTEND:20231026T163000Z
DTSTAMP:20231021T100613Z
UID:6a5a498c-53a0-46c7-8b39-356a02e9239a@conf.researchr.org
CREATED:20230912T144158Z
SUMMARY:SPLASH OOPSLA: program analysis 2
DESCRIPTION:SPLASH OOPSLA: program analysis 2\nSession Chair(s): Annette Bieniusa\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T150000Z
DTEND:20231026T163000Z
DTSTAMP:20231021T100613Z
UID:efb460e6-5675-4058-a99d-d1172b367771@conf.researchr.org
CREATED:20230912T170619Z
SUMMARY:SPLASH OOPSLA: compilation & optimization 2
DESCRIPTION:SPLASH OOPSLA: compilation & optimization 2\nSession Chair(s): Fabian Muehlboeck\n\n
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231026T163000Z
DTEND:20231026T183000Z
DTSTAMP:20231021T100613Z
UID:9ca8f6ed-4eb9-44ee-bf4d-802a31b60152@conf.researchr.org
CREATED:20231011T033122Z
SUMMARY:SPLASH Student Research Competition: SPLASH SRC Posters
DESCRIPTION:\n\nThe ACM Student Research Competition (SRC) offers a unique opportunity for undergraduate and graduate students to present their research to a panel of judges and conference attendees at SPLASH. The SRC provides visibility and exposes up-and-coming researchers to computer science research and the research community. This competition also gives students an opportunity to discuss their research with experts in their field\, get feedback\, and sharpen their communication and networking skills. \nTo participate in the competition\, a student must submit a 2-page description of their original research project. The submitted project descriptions are peer-reviewed. Each student whose description is selected by a panel of reviewers is invited to attend the SRC competition at SPLASH and present their work.  \nWinners of the SPLASH competition are invited to participate in the ACM Student Research Competition Grand Finals. Submit your work and take part in the ACM Student Research Competition at SPLASH 2023!
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080223Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T083000Z
DTEND:20231027T093000Z
DTSTAMP:20231021T100613Z
UID:aed68888-4191-4537-ab57-568319930615@conf.researchr.org
CREATED:20230912T183250Z
SUMMARY:SPLASH OOPSLA: Keynote 3
DESCRIPTION:\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T100000Z
DTEND:20231027T113000Z
DTSTAMP:20231021T100613Z
UID:99e4fa83-8211-4972-a0f1-4c88e6a70d3b@conf.researchr.org
CREATED:20230912T150017Z
SUMMARY:SPLASH OOPSLA: verification 1
DESCRIPTION:SPLASH OOPSLA: verification 1\nSession Chair(s): Gowtham Kaki\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T100000Z
DTEND:20231027T113000Z
DTSTAMP:20231021T100613Z
UID:b6edc552-8e02-4dba-bd7d-af8870167e2d@conf.researchr.org
CREATED:20230912T142202Z
SUMMARY:SPLASH OOPSLA: distribution & networking 1
DESCRIPTION:SPLASH OOPSLA: distribution & networking 1\nSession Chair(s): Elisa Gonzalez Boix\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T100000Z
DTEND:20231027T113000Z
DTSTAMP:20231021T100613Z
UID:8b0ce44e-7ca3-465d-809b-902fe68aeb25@conf.researchr.org
CREATED:20230912T170619Z
SUMMARY:SPLASH OOPSLA: software development
DESCRIPTION:SPLASH OOPSLA: software development\nSession Chair(s): Chandrakana Nandi\n\n
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T130000Z
DTEND:20231027T143000Z
DTSTAMP:20231021T100613Z
UID:851d946f-b37c-4919-9099-720168849306@conf.researchr.org
CREATED:20230912T150041Z
SUMMARY:SPLASH OOPSLA: verification 2
DESCRIPTION:SPLASH OOPSLA: verification 2\nSession Chair(s): Jonathan Aldrich\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T130000Z
DTEND:20231027T143000Z
DTSTAMP:20231021T100613Z
UID:d108f37b-74c4-448d-b3c0-9b29a7e7f579@conf.researchr.org
CREATED:20230912T133331Z
SUMMARY:SPLASH OOPSLA: compilation and optimization 1
DESCRIPTION:SPLASH OOPSLA: compilation and optimization 1\nSession Chair(s): Ben Greenman\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T130000Z
DTEND:20231027T143000Z
DTSTAMP:20231021T100613Z
UID:61652851-04a1-43ac-ac9b-d61dee95125e@conf.researchr.org
CREATED:20230912T170619Z
SUMMARY:SPLASH OOPSLA: security & privacy
DESCRIPTION:SPLASH OOPSLA: security & privacy\nSession Chair(s): Arjun Guha\n\n
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T150000Z
DTEND:20231027T163000Z
DTSTAMP:20231021T100613Z
UID:8f8a7a92-625f-45ba-bbd6-49ec2d327538@conf.researchr.org
CREATED:20230912T142246Z
SUMMARY:SPLASH OOPSLA: distribution & networking 2
DESCRIPTION:SPLASH OOPSLA: distribution & networking 2\nSession Chair(s): Elisa Gonzalez Boix\n\n
LOCATION:Room I - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T150000Z
DTEND:20231027T163000Z
DTSTAMP:20231021T100613Z
UID:c070e14b-aa3a-4f87-95dd-11c4ca354393@conf.researchr.org
CREATED:20230912T144540Z
SUMMARY:SPLASH OOPSLA: refactoring
DESCRIPTION:SPLASH OOPSLA: refactoring\nSession Chair(s): Gowtham Kaki\n\n
LOCATION:Room II - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
BEGIN:VEVENT
DTSTART:20231027T150000Z
DTEND:20231027T163000Z
DTSTAMP:20231021T100613Z
UID:3b304c77-cbd5-4d5c-8af4-996d4e0522f8@conf.researchr.org
CREATED:20230912T170619Z
SUMMARY:SPLASH OOPSLA: separation logic
DESCRIPTION:SPLASH OOPSLA: separation logic\nSession Chair(s): Jonathan Aldrich\n\n
LOCATION:Room XII - Av.Marginal n.8554, Cascais, Portugal
LAST-MODIFIED:20231021T080639Z
END:VEVENT
END:VCALENDAR